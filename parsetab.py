
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY BOOL BREAK COMMA CONTINUE DECREMENT DIVIDE ELSE EQUALS EQUALS_EQUALS FALSE FLOAT FOR FUNCTION GREATER_EQUALS GREATER_THAN ID IF INCREMENT INT LBRACE LBRACKET LESS_EQUALS LESS_THAN LPAREN MINUS MODULO NOT NOT_EQUALS NUMBER OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING STRING_TYPE TIMES TRUE VOID WHILEprogram : statement\n               | program statementstatement : declaration\n                 | assignment\n                 | expression\n                 | if_statement\n                 | while_statement\n                 | for_statement\n                 | function_declaration\n                 | return_statement\n                 | break_statement\n                 | continue_statement\n                 | blockblock : LBRACE statement_list RBRACEstatement_list : statement\n                     | statement_list statementdeclaration : type ID EQUALS expression SEMICOLON\n                  | type ID LBRACKET NUMBER RBRACKET SEMICOLON\n                  | type ID SEMICOLONassignment : ID EQUALS expression SEMICOLON\n                 | ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON\n                 | ID INCREMENT SEMICOLON\n                 | ID DECREMENT SEMICOLONexpression : term\n                  | expression PLUS term\n                  | expression MINUS term\n                  | expression AND term\n                  | expression OR termterm : factor\n            | term TIMES factor\n            | term DIVIDE factor\n            | term MODULO factor\n            | term EQUALS_EQUALS factor\n            | term NOT_EQUALS factor\n            | term LESS_THAN factor\n            | term GREATER_THAN factor\n            | term LESS_EQUALS factor\n            | term GREATER_EQUALS factorfactor : NUMBER\n              | STRING\n              | ID\n              | TRUE\n              | FALSE\n              | LPAREN expression RPAREN\n              | ID LBRACKET expression RBRACKET\n              | function_call\n              | NOT factorfunction_declaration : FUNCTION type ID LPAREN parameter_list RPAREN blockparameter_list : type ID\n                     | parameter_list COMMA type ID\n                     | emptyfunction_call : ID LPAREN argument_list RPARENargument_list : expression\n                    | argument_list COMMA expression\n                    | emptyif_statement : IF LPAREN expression RPAREN block\n                   | IF LPAREN expression RPAREN block ELSE blockwhile_statement : WHILE LPAREN expression RPAREN blockfor_statement : FOR LPAREN declaration expression SEMICOLON expression RPAREN blockreturn_statement : RETURN expression SEMICOLON\n                       | RETURN SEMICOLONbreak_statement : BREAK SEMICOLONcontinue_statement : CONTINUE SEMICOLONtype : INT\n            | FLOAT\n            | STRING_TYPE\n            | BOOL\n            | VOID\n            | ARRAYempty :'
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,62,64,66,67,68,69,70,71,72,73,74,75,76,77,81,82,86,87,88,89,90,91,92,93,94,96,97,99,101,102,103,106,107,108,109,115,117,119,120,121,122,123,126,133,134,136,137,138,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,44,-41,-39,-24,61,61,15,-64,-65,-66,-67,-68,-69,-29,-40,-42,-43,-46,61,-2,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-41,61,100,-61,-62,-63,15,-15,-47,-25,-26,-27,-28,61,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,61,61,-60,-14,-16,-20,-45,-52,61,-17,61,-56,-45,-58,61,130,-18,-21,-57,-48,139,-59,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[18,18,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,18,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,18,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[20,20,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,20,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,20,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[21,21,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,21,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,21,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'FUNCTION':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[22,22,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,22,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,22,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[23,23,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,23,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,23,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[24,24,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,24,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,24,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[25,25,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,25,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,25,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'LBRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,26,33,34,35,36,37,39,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,110,112,115,119,120,121,126,128,131,133,134,135,136,138,],[26,26,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,26,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,26,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,26,26,-17,-56,-45,-58,-18,26,26,-21,-57,26,-48,-59,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,22,26,33,34,35,36,37,39,61,63,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,114,115,119,120,121,126,132,133,134,136,138,],[27,27,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,27,27,-29,-40,-42,-43,-46,-2,-41,27,-61,-62,-63,27,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,27,-17,-56,-45,-58,-18,27,-21,-57,-48,-59,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,22,26,33,34,35,36,37,39,61,63,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,114,115,119,120,121,126,132,133,134,136,138,],[28,28,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,28,28,-29,-40,-42,-43,-46,-2,-41,28,-61,-62,-63,28,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,28,-17,-56,-45,-58,-18,28,-21,-57,-48,-59,]),'STRING_TYPE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,22,26,33,34,35,36,37,39,61,63,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,114,115,119,120,121,126,132,133,134,136,138,],[29,29,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,29,29,-29,-40,-42,-43,-46,-2,-41,29,-61,-62,-63,29,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,29,-17,-56,-45,-58,-18,29,-21,-57,-48,-59,]),'BOOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,22,26,33,34,35,36,37,39,61,63,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,114,115,119,120,121,126,132,133,134,136,138,],[30,30,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,30,30,-29,-40,-42,-43,-46,-2,-41,30,-61,-62,-63,30,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,30,-17,-56,-45,-58,-18,30,-21,-57,-48,-59,]),'VOID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,22,26,33,34,35,36,37,39,61,63,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,114,115,119,120,121,126,132,133,134,136,138,],[31,31,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,31,31,-29,-40,-42,-43,-46,-2,-41,31,-61,-62,-63,31,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,31,-17,-56,-45,-58,-18,31,-21,-57,-48,-59,]),'ARRAY':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,22,26,33,34,35,36,37,39,61,63,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,114,115,119,120,121,126,132,133,134,136,138,],[32,32,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,32,32,-29,-40,-42,-43,-46,-2,-41,32,-61,-62,-63,32,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,32,-17,-56,-45,-58,-18,32,-21,-57,-48,-59,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,19,23,26,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,86,87,88,89,90,91,92,93,94,96,97,99,101,102,103,106,107,108,109,115,117,119,120,121,122,126,133,134,136,138,],[16,16,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,16,16,16,-29,-40,-42,-43,-46,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-41,16,-61,-62,-63,16,-15,-47,-25,-26,-27,-28,16,-19,105,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,16,16,-60,-14,-16,-20,-45,-52,16,-17,16,-56,-45,-58,16,-18,-21,-57,-48,-59,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,19,23,26,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,81,82,86,87,88,89,90,91,92,93,94,96,97,99,101,102,103,106,107,108,109,115,117,119,120,121,122,126,133,134,136,138,],[34,34,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,34,34,34,-29,-40,-42,-43,-46,34,-2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-41,34,-61,-62,-63,34,-15,-47,-25,-26,-27,-28,34,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,34,34,-60,-14,-16,-20,-45,-52,34,-17,34,-56,-45,-58,34,-18,-21,-57,-48,-59,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,19,23,26,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,81,82,86,87,88,89,90,91,92,93,94,96,97,99,101,102,103,106,107,108,109,115,117,119,120,121,122,126,133,134,136,138,],[35,35,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,35,35,35,-29,-40,-42,-43,-46,35,-2,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-41,35,-61,-62,-63,35,-15,-47,-25,-26,-27,-28,35,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,35,35,-60,-14,-16,-20,-45,-52,35,-17,35,-56,-45,-58,35,-18,-21,-57,-48,-59,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,19,23,26,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,81,82,86,87,88,89,90,91,92,93,94,96,97,99,101,102,103,106,107,108,109,115,117,119,120,121,122,126,133,134,136,138,],[36,36,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,36,36,36,-29,-40,-42,-43,-46,36,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-41,36,-61,-62,-63,36,-15,-47,-25,-26,-27,-28,36,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,36,36,-60,-14,-16,-20,-45,-52,36,-17,36,-56,-45,-58,36,-18,-21,-57,-48,-59,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,26,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,81,82,86,87,88,89,90,91,92,93,94,96,97,99,100,101,102,103,106,107,108,109,115,117,119,120,121,122,126,133,134,136,138,],[19,19,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,49,-39,-24,59,19,62,63,19,19,-29,-40,-42,-43,-46,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,49,19,-61,-62,-63,19,-15,-47,-25,-26,-27,-28,19,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,19,19,114,-60,-14,-16,-20,-45,-52,19,-17,19,-56,-45,-58,19,-18,-21,-57,-48,-59,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,19,23,26,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,61,62,66,67,68,69,70,71,72,73,74,75,76,77,81,82,86,87,88,89,90,91,92,93,94,96,97,99,101,102,103,106,107,108,109,115,117,119,120,121,122,126,133,134,136,138,],[38,38,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,38,38,38,-29,-40,-42,-43,-46,38,-2,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-41,38,-61,-62,-63,38,-15,-47,-25,-26,-27,-28,38,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,38,38,-60,-14,-16,-20,-45,-52,38,-17,38,-56,-45,-58,38,-18,-21,-57,-48,-59,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,33,34,35,36,37,39,61,66,67,68,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,106,107,108,115,119,120,121,126,133,134,136,138,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,-29,-40,-42,-43,-46,-2,-41,-61,-62,-63,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,15,16,17,33,34,35,36,37,61,66,67,68,69,70,71,72,73,74,75,77,81,82,86,87,88,89,90,91,92,93,94,96,101,102,103,106,107,108,115,119,120,121,126,133,134,136,138,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-41,-39,-24,-29,-40,-42,-43,-46,-41,-61,-62,-63,102,-15,-47,-25,-26,-27,-28,-19,-22,-23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-60,-14,-16,-20,-45,-52,-17,-56,-45,-58,-18,-21,-57,-48,-59,]),'PLUS':([5,15,16,17,33,34,35,36,37,60,61,65,71,72,73,74,75,79,80,84,86,87,88,89,90,91,92,93,94,95,96,98,104,107,108,111,113,118,120,127,129,],[40,-41,-39,-24,-29,-40,-42,-43,-46,40,-41,40,-47,-25,-26,-27,-28,40,40,40,-30,-31,-32,-33,-34,-35,-36,-37,-38,40,-44,40,40,-45,-52,40,40,40,-45,40,40,]),'MINUS':([5,15,16,17,33,34,35,36,37,60,61,65,71,72,73,74,75,79,80,84,86,87,88,89,90,91,92,93,94,95,96,98,104,107,108,111,113,118,120,127,129,],[41,-41,-39,-24,-29,-40,-42,-43,-46,41,-41,41,-47,-25,-26,-27,-28,41,41,41,-30,-31,-32,-33,-34,-35,-36,-37,-38,41,-44,41,41,-45,-52,41,41,41,-45,41,41,]),'AND':([5,15,16,17,33,34,35,36,37,60,61,65,71,72,73,74,75,79,80,84,86,87,88,89,90,91,92,93,94,95,96,98,104,107,108,111,113,118,120,127,129,],[42,-41,-39,-24,-29,-40,-42,-43,-46,42,-41,42,-47,-25,-26,-27,-28,42,42,42,-30,-31,-32,-33,-34,-35,-36,-37,-38,42,-44,42,42,-45,-52,42,42,42,-45,42,42,]),'OR':([5,15,16,17,33,34,35,36,37,60,61,65,71,72,73,74,75,79,80,84,86,87,88,89,90,91,92,93,94,95,96,98,104,107,108,111,113,118,120,127,129,],[43,-41,-39,-24,-29,-40,-42,-43,-46,43,-41,43,-47,-25,-26,-27,-28,43,43,43,-30,-31,-32,-33,-34,-35,-36,-37,-38,43,-44,43,43,-45,-52,43,43,43,-45,43,43,]),'EQUALS':([15,44,107,],[45,76,117,]),'LBRACKET':([15,44,61,],[46,78,97,]),'INCREMENT':([15,],[47,]),'DECREMENT':([15,],[48,]),'TIMES':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,50,-29,-40,-42,-43,-46,-41,-47,50,50,50,50,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'DIVIDE':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,51,-29,-40,-42,-43,-46,-41,-47,51,51,51,51,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'MODULO':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,52,-29,-40,-42,-43,-46,-41,-47,52,52,52,52,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'EQUALS_EQUALS':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,53,-29,-40,-42,-43,-46,-41,-47,53,53,53,53,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'NOT_EQUALS':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,54,-29,-40,-42,-43,-46,-41,-47,54,54,54,54,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'LESS_THAN':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,55,-29,-40,-42,-43,-46,-41,-47,55,55,55,55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'GREATER_THAN':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,56,-29,-40,-42,-43,-46,-41,-47,56,56,56,56,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'LESS_EQUALS':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,57,-29,-40,-42,-43,-46,-41,-47,57,57,57,57,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'GREATER_EQUALS':([15,16,17,33,34,35,36,37,61,71,72,73,74,75,86,87,88,89,90,91,92,93,94,96,107,108,120,],[-41,-39,58,-29,-40,-42,-43,-46,-41,-47,58,58,58,58,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-45,-52,-45,]),'RPAREN':([16,17,33,34,35,36,37,49,60,61,71,72,73,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,108,114,118,120,124,125,129,130,139,],[-39,-24,-29,-40,-42,-43,-46,-70,96,-41,-47,-25,-26,-27,-28,108,-53,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,110,-44,112,-52,-70,-54,-45,131,-51,135,-49,-50,]),'SEMICOLON':([16,17,23,24,25,33,34,35,36,37,44,47,48,61,65,71,72,73,74,75,79,86,87,88,89,90,91,92,93,94,96,104,108,113,116,120,127,],[-39,-24,66,67,68,-29,-40,-42,-43,-46,77,81,82,-41,101,-47,-25,-26,-27,-28,106,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,115,-52,122,126,-45,133,]),'RBRACKET':([16,17,33,34,35,36,37,61,71,72,73,74,75,80,86,87,88,89,90,91,92,93,94,96,105,108,111,120,],[-39,-24,-29,-40,-42,-43,-46,-41,-47,-25,-26,-27,-28,107,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,116,-52,120,-45,]),'COMMA':([16,17,33,34,35,36,37,49,61,71,72,73,74,75,83,84,85,86,87,88,89,90,91,92,93,94,96,108,114,118,120,124,125,130,139,],[-39,-24,-29,-40,-42,-43,-46,-70,-41,-47,-25,-26,-27,-28,109,-53,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-44,-52,-70,-54,-45,132,-51,-49,-50,]),'ELSE':([102,119,],[-14,128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,26,69,],[2,39,70,103,]),'declaration':([0,1,26,63,69,],[3,3,3,99,3,]),'assignment':([0,1,26,69,],[4,4,4,4,]),'expression':([0,1,19,23,26,45,46,49,59,62,69,76,97,99,109,117,122,],[5,5,60,65,5,79,80,84,95,98,5,104,111,113,118,127,129,]),'if_statement':([0,1,26,69,],[6,6,6,6,]),'while_statement':([0,1,26,69,],[7,7,7,7,]),'for_statement':([0,1,26,69,],[8,8,8,8,]),'function_declaration':([0,1,26,69,],[9,9,9,9,]),'return_statement':([0,1,26,69,],[10,10,10,10,]),'break_statement':([0,1,26,69,],[11,11,11,11,]),'continue_statement':([0,1,26,69,],[12,12,12,12,]),'block':([0,1,26,69,110,112,128,131,135,],[13,13,13,13,119,121,134,136,138,]),'type':([0,1,22,26,63,69,114,132,],[14,14,64,14,14,14,123,137,]),'term':([0,1,19,23,26,40,41,42,43,45,46,49,59,62,69,76,97,99,109,117,122,],[17,17,17,17,17,72,73,74,75,17,17,17,17,17,17,17,17,17,17,17,17,]),'factor':([0,1,19,23,26,38,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,62,69,76,97,99,109,117,122,],[33,33,33,33,33,71,33,33,33,33,33,33,33,86,87,88,89,90,91,92,93,94,33,33,33,33,33,33,33,33,33,]),'function_call':([0,1,19,23,26,38,40,41,42,43,45,46,49,50,51,52,53,54,55,56,57,58,59,62,69,76,97,99,109,117,122,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'statement_list':([26,],[69,]),'argument_list':([49,],[83,]),'empty':([49,114,],[85,125,]),'parameter_list':([114,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','compiler.py',113),
  ('program -> program statement','program',2,'p_program','compiler.py',114),
  ('statement -> declaration','statement',1,'p_statement','compiler.py',121),
  ('statement -> assignment','statement',1,'p_statement','compiler.py',122),
  ('statement -> expression','statement',1,'p_statement','compiler.py',123),
  ('statement -> if_statement','statement',1,'p_statement','compiler.py',124),
  ('statement -> while_statement','statement',1,'p_statement','compiler.py',125),
  ('statement -> for_statement','statement',1,'p_statement','compiler.py',126),
  ('statement -> function_declaration','statement',1,'p_statement','compiler.py',127),
  ('statement -> return_statement','statement',1,'p_statement','compiler.py',128),
  ('statement -> break_statement','statement',1,'p_statement','compiler.py',129),
  ('statement -> continue_statement','statement',1,'p_statement','compiler.py',130),
  ('statement -> block','statement',1,'p_statement','compiler.py',131),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','compiler.py',135),
  ('statement_list -> statement','statement_list',1,'p_statement_list','compiler.py',139),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','compiler.py',140),
  ('declaration -> type ID EQUALS expression SEMICOLON','declaration',5,'p_declaration','compiler.py',147),
  ('declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON','declaration',6,'p_declaration','compiler.py',148),
  ('declaration -> type ID SEMICOLON','declaration',3,'p_declaration','compiler.py',149),
  ('assignment -> ID EQUALS expression SEMICOLON','assignment',4,'p_assignment','compiler.py',158),
  ('assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON','assignment',7,'p_assignment','compiler.py',159),
  ('assignment -> ID INCREMENT SEMICOLON','assignment',3,'p_assignment','compiler.py',160),
  ('assignment -> ID DECREMENT SEMICOLON','assignment',3,'p_assignment','compiler.py',161),
  ('expression -> term','expression',1,'p_expression','compiler.py',170),
  ('expression -> expression PLUS term','expression',3,'p_expression','compiler.py',171),
  ('expression -> expression MINUS term','expression',3,'p_expression','compiler.py',172),
  ('expression -> expression AND term','expression',3,'p_expression','compiler.py',173),
  ('expression -> expression OR term','expression',3,'p_expression','compiler.py',174),
  ('term -> factor','term',1,'p_term','compiler.py',181),
  ('term -> term TIMES factor','term',3,'p_term','compiler.py',182),
  ('term -> term DIVIDE factor','term',3,'p_term','compiler.py',183),
  ('term -> term MODULO factor','term',3,'p_term','compiler.py',184),
  ('term -> term EQUALS_EQUALS factor','term',3,'p_term','compiler.py',185),
  ('term -> term NOT_EQUALS factor','term',3,'p_term','compiler.py',186),
  ('term -> term LESS_THAN factor','term',3,'p_term','compiler.py',187),
  ('term -> term GREATER_THAN factor','term',3,'p_term','compiler.py',188),
  ('term -> term LESS_EQUALS factor','term',3,'p_term','compiler.py',189),
  ('term -> term GREATER_EQUALS factor','term',3,'p_term','compiler.py',190),
  ('factor -> NUMBER','factor',1,'p_factor','compiler.py',197),
  ('factor -> STRING','factor',1,'p_factor','compiler.py',198),
  ('factor -> ID','factor',1,'p_factor','compiler.py',199),
  ('factor -> TRUE','factor',1,'p_factor','compiler.py',200),
  ('factor -> FALSE','factor',1,'p_factor','compiler.py',201),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','compiler.py',202),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_factor','compiler.py',203),
  ('factor -> function_call','factor',1,'p_factor','compiler.py',204),
  ('factor -> NOT factor','factor',2,'p_factor','compiler.py',205),
  ('function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block','function_declaration',7,'p_function_declaration','compiler.py',216),
  ('parameter_list -> type ID','parameter_list',2,'p_parameter_list','compiler.py',220),
  ('parameter_list -> parameter_list COMMA type ID','parameter_list',4,'p_parameter_list','compiler.py',221),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','compiler.py',222),
  ('function_call -> ID LPAREN argument_list RPAREN','function_call',4,'p_function_call','compiler.py',231),
  ('argument_list -> expression','argument_list',1,'p_argument_list','compiler.py',235),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','compiler.py',236),
  ('argument_list -> empty','argument_list',1,'p_argument_list','compiler.py',237),
  ('if_statement -> IF LPAREN expression RPAREN block','if_statement',5,'p_if_statement','compiler.py',246),
  ('if_statement -> IF LPAREN expression RPAREN block ELSE block','if_statement',7,'p_if_statement','compiler.py',247),
  ('while_statement -> WHILE LPAREN expression RPAREN block','while_statement',5,'p_while_statement','compiler.py',254),
  ('for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block','for_statement',8,'p_for_statement','compiler.py',258),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','compiler.py',262),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','compiler.py',263),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','compiler.py',270),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','compiler.py',274),
  ('type -> INT','type',1,'p_type','compiler.py',278),
  ('type -> FLOAT','type',1,'p_type','compiler.py',279),
  ('type -> STRING_TYPE','type',1,'p_type','compiler.py',280),
  ('type -> BOOL','type',1,'p_type','compiler.py',281),
  ('type -> VOID','type',1,'p_type','compiler.py',282),
  ('type -> ARRAY','type',1,'p_type','compiler.py',283),
  ('empty -> <empty>','empty',0,'p_empty','compiler.py',287),
]
