Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> declaration
Rule 4     statement -> assignment
Rule 5     statement -> expression
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> function_declaration
Rule 10    statement -> return_statement
Rule 11    statement -> break_statement
Rule 12    statement -> continue_statement
Rule 13    statement -> block
Rule 14    block -> LBRACE statement_list RBRACE
Rule 15    statement_list -> statement
Rule 16    statement_list -> statement_list statement
Rule 17    declaration -> type ID EQUALS expression SEMICOLON
Rule 18    declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON
Rule 19    declaration -> type ID SEMICOLON
Rule 20    assignment -> ID EQUALS expression SEMICOLON
Rule 21    assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
Rule 22    assignment -> ID INCREMENT SEMICOLON
Rule 23    assignment -> ID DECREMENT SEMICOLON
Rule 24    expression -> term
Rule 25    expression -> expression PLUS term
Rule 26    expression -> expression MINUS term
Rule 27    expression -> expression AND term
Rule 28    expression -> expression OR term
Rule 29    term -> factor
Rule 30    term -> term TIMES factor
Rule 31    term -> term DIVIDE factor
Rule 32    term -> term MODULO factor
Rule 33    term -> term EQUALS_EQUALS factor
Rule 34    term -> term NOT_EQUALS factor
Rule 35    term -> term LESS_THAN factor
Rule 36    term -> term GREATER_THAN factor
Rule 37    term -> term LESS_EQUALS factor
Rule 38    term -> term GREATER_EQUALS factor
Rule 39    factor -> NUMBER
Rule 40    factor -> STRING
Rule 41    factor -> ID
Rule 42    factor -> TRUE
Rule 43    factor -> FALSE
Rule 44    factor -> LPAREN expression RPAREN
Rule 45    factor -> ID LBRACKET expression RBRACKET
Rule 46    factor -> function_call
Rule 47    factor -> NOT factor
Rule 48    function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block
Rule 49    parameter_list -> type ID
Rule 50    parameter_list -> parameter_list COMMA type ID
Rule 51    parameter_list -> empty
Rule 52    function_call -> ID LPAREN argument_list RPAREN
Rule 53    argument_list -> expression
Rule 54    argument_list -> argument_list COMMA expression
Rule 55    argument_list -> empty
Rule 56    if_statement -> IF LPAREN expression RPAREN block
Rule 57    if_statement -> IF LPAREN expression RPAREN block ELSE block
Rule 58    while_statement -> WHILE LPAREN expression RPAREN block
Rule 59    for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block
Rule 60    return_statement -> RETURN expression SEMICOLON
Rule 61    return_statement -> RETURN SEMICOLON
Rule 62    break_statement -> BREAK SEMICOLON
Rule 63    continue_statement -> CONTINUE SEMICOLON
Rule 64    type -> INT
Rule 65    type -> FLOAT
Rule 66    type -> STRING_TYPE
Rule 67    type -> BOOL
Rule 68    type -> VOID
Rule 69    type -> ARRAY
Rule 70    empty -> <empty>

Terminals, with rules where they appear

AND                  : 27
ARRAY                : 69
BOOL                 : 67
BREAK                : 62
COMMA                : 50 54
CONTINUE             : 63
DECREMENT            : 23
DIVIDE               : 31
ELSE                 : 57
EQUALS               : 17 20 21
EQUALS_EQUALS        : 33
FALSE                : 43
FLOAT                : 65
FOR                  : 59
FUNCTION             : 48
GREATER_EQUALS       : 38
GREATER_THAN         : 36
ID                   : 17 18 19 20 21 22 23 41 45 48 49 50 52
IF                   : 56 57
INCREMENT            : 22
INT                  : 64
LBRACE               : 14
LBRACKET             : 18 21 45
LESS_EQUALS          : 37
LESS_THAN            : 35
LPAREN               : 44 48 52 56 57 58 59
MINUS                : 26
MODULO               : 32
NOT                  : 47
NOT_EQUALS           : 34
NUMBER               : 18 39
OR                   : 28
PLUS                 : 25
RBRACE               : 14
RBRACKET             : 18 21 45
RETURN               : 60 61
RPAREN               : 44 48 52 56 57 58 59
SEMICOLON            : 17 18 19 20 21 22 23 59 60 61 62 63
STRING               : 40
STRING_TYPE          : 66
TIMES                : 30
TRUE                 : 42
VOID                 : 68
WHILE                : 58
error                : 

Nonterminals, with rules where they appear

argument_list        : 52 54
assignment           : 4
block                : 13 48 56 57 57 58 59
break_statement      : 11
continue_statement   : 12
declaration          : 3 59
empty                : 51 55
expression           : 5 17 20 21 21 25 26 27 28 44 45 53 54 56 57 58 59 59 60
factor               : 29 30 31 32 33 34 35 36 37 38 47
for_statement        : 8
function_call        : 46
function_declaration : 9
if_statement         : 6
parameter_list       : 48 50
program              : 2 0
return_statement     : 10
statement            : 1 2 15 16
statement_list       : 14 16
term                 : 24 25 26 27 28 30 31 32 33 34 35 36 37 38
type                 : 17 18 19 48 49 50
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) statement -> . break_statement
    (12) statement -> . continue_statement
    (13) statement -> . block
    (17) declaration -> . type ID EQUALS expression SEMICOLON
    (18) declaration -> . type ID LBRACKET NUMBER RBRACKET SEMICOLON
    (19) declaration -> . type ID SEMICOLON
    (20) assignment -> . ID EQUALS expression SEMICOLON
    (21) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
    (22) assignment -> . ID INCREMENT SEMICOLON
    (23) assignment -> . ID DECREMENT SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (56) if_statement -> . IF LPAREN expression RPAREN block
    (57) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (58) while_statement -> . WHILE LPAREN expression RPAREN block
    (59) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN block
    (48) function_declaration -> . FUNCTION type ID LPAREN parameter_list RPAREN block
    (60) return_statement -> . RETURN expression SEMICOLON
    (61) return_statement -> . RETURN SEMICOLON
    (62) break_statement -> . BREAK SEMICOLON
    (63) continue_statement -> . CONTINUE SEMICOLON
    (14) block -> . LBRACE statement_list RBRACE
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 15
    IF              shift and go to state 18
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    LBRACE          shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32
    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    program                        shift and go to state 1
    statement                      shift and go to state 2
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    continue_statement             shift and go to state 12
    block                          shift and go to state 13
    type                           shift and go to state 14
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) statement -> . break_statement
    (12) statement -> . continue_statement
    (13) statement -> . block
    (17) declaration -> . type ID EQUALS expression SEMICOLON
    (18) declaration -> . type ID LBRACKET NUMBER RBRACKET SEMICOLON
    (19) declaration -> . type ID SEMICOLON
    (20) assignment -> . ID EQUALS expression SEMICOLON
    (21) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
    (22) assignment -> . ID INCREMENT SEMICOLON
    (23) assignment -> . ID DECREMENT SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (56) if_statement -> . IF LPAREN expression RPAREN block
    (57) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (58) while_statement -> . WHILE LPAREN expression RPAREN block
    (59) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN block
    (48) function_declaration -> . FUNCTION type ID LPAREN parameter_list RPAREN block
    (60) return_statement -> . RETURN expression SEMICOLON
    (61) return_statement -> . RETURN SEMICOLON
    (62) break_statement -> . BREAK SEMICOLON
    (63) continue_statement -> . CONTINUE SEMICOLON
    (14) block -> . LBRACE statement_list RBRACE
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 15
    IF              shift and go to state 18
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    LBRACE          shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32
    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    statement                      shift and go to state 39
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    continue_statement             shift and go to state 12
    block                          shift and go to state 13
    type                           shift and go to state 14
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 2

    (1) program -> statement .

    ID              reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    FUNCTION        reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    BREAK           reduce using rule 1 (program -> statement .)
    CONTINUE        reduce using rule 1 (program -> statement .)
    LBRACE          reduce using rule 1 (program -> statement .)
    INT             reduce using rule 1 (program -> statement .)
    FLOAT           reduce using rule 1 (program -> statement .)
    STRING_TYPE     reduce using rule 1 (program -> statement .)
    BOOL            reduce using rule 1 (program -> statement .)
    VOID            reduce using rule 1 (program -> statement .)
    ARRAY           reduce using rule 1 (program -> statement .)
    NUMBER          reduce using rule 1 (program -> statement .)
    STRING          reduce using rule 1 (program -> statement .)
    TRUE            reduce using rule 1 (program -> statement .)
    FALSE           reduce using rule 1 (program -> statement .)
    LPAREN          reduce using rule 1 (program -> statement .)
    NOT             reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> declaration .

    ID              reduce using rule 3 (statement -> declaration .)
    IF              reduce using rule 3 (statement -> declaration .)
    WHILE           reduce using rule 3 (statement -> declaration .)
    FOR             reduce using rule 3 (statement -> declaration .)
    FUNCTION        reduce using rule 3 (statement -> declaration .)
    RETURN          reduce using rule 3 (statement -> declaration .)
    BREAK           reduce using rule 3 (statement -> declaration .)
    CONTINUE        reduce using rule 3 (statement -> declaration .)
    LBRACE          reduce using rule 3 (statement -> declaration .)
    INT             reduce using rule 3 (statement -> declaration .)
    FLOAT           reduce using rule 3 (statement -> declaration .)
    STRING_TYPE     reduce using rule 3 (statement -> declaration .)
    BOOL            reduce using rule 3 (statement -> declaration .)
    VOID            reduce using rule 3 (statement -> declaration .)
    ARRAY           reduce using rule 3 (statement -> declaration .)
    NUMBER          reduce using rule 3 (statement -> declaration .)
    STRING          reduce using rule 3 (statement -> declaration .)
    TRUE            reduce using rule 3 (statement -> declaration .)
    FALSE           reduce using rule 3 (statement -> declaration .)
    LPAREN          reduce using rule 3 (statement -> declaration .)
    NOT             reduce using rule 3 (statement -> declaration .)
    $end            reduce using rule 3 (statement -> declaration .)
    RBRACE          reduce using rule 3 (statement -> declaration .)


state 4

    (4) statement -> assignment .

    ID              reduce using rule 4 (statement -> assignment .)
    IF              reduce using rule 4 (statement -> assignment .)
    WHILE           reduce using rule 4 (statement -> assignment .)
    FOR             reduce using rule 4 (statement -> assignment .)
    FUNCTION        reduce using rule 4 (statement -> assignment .)
    RETURN          reduce using rule 4 (statement -> assignment .)
    BREAK           reduce using rule 4 (statement -> assignment .)
    CONTINUE        reduce using rule 4 (statement -> assignment .)
    LBRACE          reduce using rule 4 (statement -> assignment .)
    INT             reduce using rule 4 (statement -> assignment .)
    FLOAT           reduce using rule 4 (statement -> assignment .)
    STRING_TYPE     reduce using rule 4 (statement -> assignment .)
    BOOL            reduce using rule 4 (statement -> assignment .)
    VOID            reduce using rule 4 (statement -> assignment .)
    ARRAY           reduce using rule 4 (statement -> assignment .)
    NUMBER          reduce using rule 4 (statement -> assignment .)
    STRING          reduce using rule 4 (statement -> assignment .)
    TRUE            reduce using rule 4 (statement -> assignment .)
    FALSE           reduce using rule 4 (statement -> assignment .)
    LPAREN          reduce using rule 4 (statement -> assignment .)
    NOT             reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    RBRACE          reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> expression .
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    ID              reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    FOR             reduce using rule 5 (statement -> expression .)
    FUNCTION        reduce using rule 5 (statement -> expression .)
    RETURN          reduce using rule 5 (statement -> expression .)
    BREAK           reduce using rule 5 (statement -> expression .)
    CONTINUE        reduce using rule 5 (statement -> expression .)
    LBRACE          reduce using rule 5 (statement -> expression .)
    INT             reduce using rule 5 (statement -> expression .)
    FLOAT           reduce using rule 5 (statement -> expression .)
    STRING_TYPE     reduce using rule 5 (statement -> expression .)
    BOOL            reduce using rule 5 (statement -> expression .)
    VOID            reduce using rule 5 (statement -> expression .)
    ARRAY           reduce using rule 5 (statement -> expression .)
    NUMBER          reduce using rule 5 (statement -> expression .)
    STRING          reduce using rule 5 (statement -> expression .)
    TRUE            reduce using rule 5 (statement -> expression .)
    FALSE           reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    NOT             reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 6

    (6) statement -> if_statement .

    ID              reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    FUNCTION        reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    BREAK           reduce using rule 6 (statement -> if_statement .)
    CONTINUE        reduce using rule 6 (statement -> if_statement .)
    LBRACE          reduce using rule 6 (statement -> if_statement .)
    INT             reduce using rule 6 (statement -> if_statement .)
    FLOAT           reduce using rule 6 (statement -> if_statement .)
    STRING_TYPE     reduce using rule 6 (statement -> if_statement .)
    BOOL            reduce using rule 6 (statement -> if_statement .)
    VOID            reduce using rule 6 (statement -> if_statement .)
    ARRAY           reduce using rule 6 (statement -> if_statement .)
    NUMBER          reduce using rule 6 (statement -> if_statement .)
    STRING          reduce using rule 6 (statement -> if_statement .)
    TRUE            reduce using rule 6 (statement -> if_statement .)
    FALSE           reduce using rule 6 (statement -> if_statement .)
    LPAREN          reduce using rule 6 (statement -> if_statement .)
    NOT             reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> while_statement .

    ID              reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    FOR             reduce using rule 7 (statement -> while_statement .)
    FUNCTION        reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    BREAK           reduce using rule 7 (statement -> while_statement .)
    CONTINUE        reduce using rule 7 (statement -> while_statement .)
    LBRACE          reduce using rule 7 (statement -> while_statement .)
    INT             reduce using rule 7 (statement -> while_statement .)
    FLOAT           reduce using rule 7 (statement -> while_statement .)
    STRING_TYPE     reduce using rule 7 (statement -> while_statement .)
    BOOL            reduce using rule 7 (statement -> while_statement .)
    VOID            reduce using rule 7 (statement -> while_statement .)
    ARRAY           reduce using rule 7 (statement -> while_statement .)
    NUMBER          reduce using rule 7 (statement -> while_statement .)
    STRING          reduce using rule 7 (statement -> while_statement .)
    TRUE            reduce using rule 7 (statement -> while_statement .)
    FALSE           reduce using rule 7 (statement -> while_statement .)
    LPAREN          reduce using rule 7 (statement -> while_statement .)
    NOT             reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RBRACE          reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> for_statement .

    ID              reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    FUNCTION        reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    BREAK           reduce using rule 8 (statement -> for_statement .)
    CONTINUE        reduce using rule 8 (statement -> for_statement .)
    LBRACE          reduce using rule 8 (statement -> for_statement .)
    INT             reduce using rule 8 (statement -> for_statement .)
    FLOAT           reduce using rule 8 (statement -> for_statement .)
    STRING_TYPE     reduce using rule 8 (statement -> for_statement .)
    BOOL            reduce using rule 8 (statement -> for_statement .)
    VOID            reduce using rule 8 (statement -> for_statement .)
    ARRAY           reduce using rule 8 (statement -> for_statement .)
    NUMBER          reduce using rule 8 (statement -> for_statement .)
    STRING          reduce using rule 8 (statement -> for_statement .)
    TRUE            reduce using rule 8 (statement -> for_statement .)
    FALSE           reduce using rule 8 (statement -> for_statement .)
    LPAREN          reduce using rule 8 (statement -> for_statement .)
    NOT             reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    RBRACE          reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> function_declaration .

    ID              reduce using rule 9 (statement -> function_declaration .)
    IF              reduce using rule 9 (statement -> function_declaration .)
    WHILE           reduce using rule 9 (statement -> function_declaration .)
    FOR             reduce using rule 9 (statement -> function_declaration .)
    FUNCTION        reduce using rule 9 (statement -> function_declaration .)
    RETURN          reduce using rule 9 (statement -> function_declaration .)
    BREAK           reduce using rule 9 (statement -> function_declaration .)
    CONTINUE        reduce using rule 9 (statement -> function_declaration .)
    LBRACE          reduce using rule 9 (statement -> function_declaration .)
    INT             reduce using rule 9 (statement -> function_declaration .)
    FLOAT           reduce using rule 9 (statement -> function_declaration .)
    STRING_TYPE     reduce using rule 9 (statement -> function_declaration .)
    BOOL            reduce using rule 9 (statement -> function_declaration .)
    VOID            reduce using rule 9 (statement -> function_declaration .)
    ARRAY           reduce using rule 9 (statement -> function_declaration .)
    NUMBER          reduce using rule 9 (statement -> function_declaration .)
    STRING          reduce using rule 9 (statement -> function_declaration .)
    TRUE            reduce using rule 9 (statement -> function_declaration .)
    FALSE           reduce using rule 9 (statement -> function_declaration .)
    LPAREN          reduce using rule 9 (statement -> function_declaration .)
    NOT             reduce using rule 9 (statement -> function_declaration .)
    $end            reduce using rule 9 (statement -> function_declaration .)
    RBRACE          reduce using rule 9 (statement -> function_declaration .)


state 10

    (10) statement -> return_statement .

    ID              reduce using rule 10 (statement -> return_statement .)
    IF              reduce using rule 10 (statement -> return_statement .)
    WHILE           reduce using rule 10 (statement -> return_statement .)
    FOR             reduce using rule 10 (statement -> return_statement .)
    FUNCTION        reduce using rule 10 (statement -> return_statement .)
    RETURN          reduce using rule 10 (statement -> return_statement .)
    BREAK           reduce using rule 10 (statement -> return_statement .)
    CONTINUE        reduce using rule 10 (statement -> return_statement .)
    LBRACE          reduce using rule 10 (statement -> return_statement .)
    INT             reduce using rule 10 (statement -> return_statement .)
    FLOAT           reduce using rule 10 (statement -> return_statement .)
    STRING_TYPE     reduce using rule 10 (statement -> return_statement .)
    BOOL            reduce using rule 10 (statement -> return_statement .)
    VOID            reduce using rule 10 (statement -> return_statement .)
    ARRAY           reduce using rule 10 (statement -> return_statement .)
    NUMBER          reduce using rule 10 (statement -> return_statement .)
    STRING          reduce using rule 10 (statement -> return_statement .)
    TRUE            reduce using rule 10 (statement -> return_statement .)
    FALSE           reduce using rule 10 (statement -> return_statement .)
    LPAREN          reduce using rule 10 (statement -> return_statement .)
    NOT             reduce using rule 10 (statement -> return_statement .)
    $end            reduce using rule 10 (statement -> return_statement .)
    RBRACE          reduce using rule 10 (statement -> return_statement .)


state 11

    (11) statement -> break_statement .

    ID              reduce using rule 11 (statement -> break_statement .)
    IF              reduce using rule 11 (statement -> break_statement .)
    WHILE           reduce using rule 11 (statement -> break_statement .)
    FOR             reduce using rule 11 (statement -> break_statement .)
    FUNCTION        reduce using rule 11 (statement -> break_statement .)
    RETURN          reduce using rule 11 (statement -> break_statement .)
    BREAK           reduce using rule 11 (statement -> break_statement .)
    CONTINUE        reduce using rule 11 (statement -> break_statement .)
    LBRACE          reduce using rule 11 (statement -> break_statement .)
    INT             reduce using rule 11 (statement -> break_statement .)
    FLOAT           reduce using rule 11 (statement -> break_statement .)
    STRING_TYPE     reduce using rule 11 (statement -> break_statement .)
    BOOL            reduce using rule 11 (statement -> break_statement .)
    VOID            reduce using rule 11 (statement -> break_statement .)
    ARRAY           reduce using rule 11 (statement -> break_statement .)
    NUMBER          reduce using rule 11 (statement -> break_statement .)
    STRING          reduce using rule 11 (statement -> break_statement .)
    TRUE            reduce using rule 11 (statement -> break_statement .)
    FALSE           reduce using rule 11 (statement -> break_statement .)
    LPAREN          reduce using rule 11 (statement -> break_statement .)
    NOT             reduce using rule 11 (statement -> break_statement .)
    $end            reduce using rule 11 (statement -> break_statement .)
    RBRACE          reduce using rule 11 (statement -> break_statement .)


state 12

    (12) statement -> continue_statement .

    ID              reduce using rule 12 (statement -> continue_statement .)
    IF              reduce using rule 12 (statement -> continue_statement .)
    WHILE           reduce using rule 12 (statement -> continue_statement .)
    FOR             reduce using rule 12 (statement -> continue_statement .)
    FUNCTION        reduce using rule 12 (statement -> continue_statement .)
    RETURN          reduce using rule 12 (statement -> continue_statement .)
    BREAK           reduce using rule 12 (statement -> continue_statement .)
    CONTINUE        reduce using rule 12 (statement -> continue_statement .)
    LBRACE          reduce using rule 12 (statement -> continue_statement .)
    INT             reduce using rule 12 (statement -> continue_statement .)
    FLOAT           reduce using rule 12 (statement -> continue_statement .)
    STRING_TYPE     reduce using rule 12 (statement -> continue_statement .)
    BOOL            reduce using rule 12 (statement -> continue_statement .)
    VOID            reduce using rule 12 (statement -> continue_statement .)
    ARRAY           reduce using rule 12 (statement -> continue_statement .)
    NUMBER          reduce using rule 12 (statement -> continue_statement .)
    STRING          reduce using rule 12 (statement -> continue_statement .)
    TRUE            reduce using rule 12 (statement -> continue_statement .)
    FALSE           reduce using rule 12 (statement -> continue_statement .)
    LPAREN          reduce using rule 12 (statement -> continue_statement .)
    NOT             reduce using rule 12 (statement -> continue_statement .)
    $end            reduce using rule 12 (statement -> continue_statement .)
    RBRACE          reduce using rule 12 (statement -> continue_statement .)


state 13

    (13) statement -> block .

    ID              reduce using rule 13 (statement -> block .)
    IF              reduce using rule 13 (statement -> block .)
    WHILE           reduce using rule 13 (statement -> block .)
    FOR             reduce using rule 13 (statement -> block .)
    FUNCTION        reduce using rule 13 (statement -> block .)
    RETURN          reduce using rule 13 (statement -> block .)
    BREAK           reduce using rule 13 (statement -> block .)
    CONTINUE        reduce using rule 13 (statement -> block .)
    LBRACE          reduce using rule 13 (statement -> block .)
    INT             reduce using rule 13 (statement -> block .)
    FLOAT           reduce using rule 13 (statement -> block .)
    STRING_TYPE     reduce using rule 13 (statement -> block .)
    BOOL            reduce using rule 13 (statement -> block .)
    VOID            reduce using rule 13 (statement -> block .)
    ARRAY           reduce using rule 13 (statement -> block .)
    NUMBER          reduce using rule 13 (statement -> block .)
    STRING          reduce using rule 13 (statement -> block .)
    TRUE            reduce using rule 13 (statement -> block .)
    FALSE           reduce using rule 13 (statement -> block .)
    LPAREN          reduce using rule 13 (statement -> block .)
    NOT             reduce using rule 13 (statement -> block .)
    $end            reduce using rule 13 (statement -> block .)
    RBRACE          reduce using rule 13 (statement -> block .)


state 14

    (17) declaration -> type . ID EQUALS expression SEMICOLON
    (18) declaration -> type . ID LBRACKET NUMBER RBRACKET SEMICOLON
    (19) declaration -> type . ID SEMICOLON

    ID              shift and go to state 44


state 15

    (20) assignment -> ID . EQUALS expression SEMICOLON
    (21) assignment -> ID . LBRACKET expression RBRACKET EQUALS expression SEMICOLON
    (22) assignment -> ID . INCREMENT SEMICOLON
    (23) assignment -> ID . DECREMENT SEMICOLON
    (41) factor -> ID .
    (45) factor -> ID . LBRACKET expression RBRACKET
    (52) function_call -> ID . LPAREN argument_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUALS          shift and go to state 45
    LBRACKET        shift and go to state 46
    INCREMENT       shift and go to state 47
    DECREMENT       shift and go to state 48
    TIMES           reduce using rule 41 (factor -> ID .)
    DIVIDE          reduce using rule 41 (factor -> ID .)
    MODULO          reduce using rule 41 (factor -> ID .)
    EQUALS_EQUALS   reduce using rule 41 (factor -> ID .)
    NOT_EQUALS      reduce using rule 41 (factor -> ID .)
    LESS_THAN       reduce using rule 41 (factor -> ID .)
    GREATER_THAN    reduce using rule 41 (factor -> ID .)
    LESS_EQUALS     reduce using rule 41 (factor -> ID .)
    GREATER_EQUALS  reduce using rule 41 (factor -> ID .)
    PLUS            reduce using rule 41 (factor -> ID .)
    MINUS           reduce using rule 41 (factor -> ID .)
    AND             reduce using rule 41 (factor -> ID .)
    OR              reduce using rule 41 (factor -> ID .)
    ID              reduce using rule 41 (factor -> ID .)
    IF              reduce using rule 41 (factor -> ID .)
    WHILE           reduce using rule 41 (factor -> ID .)
    FOR             reduce using rule 41 (factor -> ID .)
    FUNCTION        reduce using rule 41 (factor -> ID .)
    RETURN          reduce using rule 41 (factor -> ID .)
    BREAK           reduce using rule 41 (factor -> ID .)
    CONTINUE        reduce using rule 41 (factor -> ID .)
    LBRACE          reduce using rule 41 (factor -> ID .)
    INT             reduce using rule 41 (factor -> ID .)
    FLOAT           reduce using rule 41 (factor -> ID .)
    STRING_TYPE     reduce using rule 41 (factor -> ID .)
    BOOL            reduce using rule 41 (factor -> ID .)
    VOID            reduce using rule 41 (factor -> ID .)
    ARRAY           reduce using rule 41 (factor -> ID .)
    NUMBER          reduce using rule 41 (factor -> ID .)
    STRING          reduce using rule 41 (factor -> ID .)
    TRUE            reduce using rule 41 (factor -> ID .)
    FALSE           reduce using rule 41 (factor -> ID .)
    NOT             reduce using rule 41 (factor -> ID .)
    $end            reduce using rule 41 (factor -> ID .)
    RBRACE          reduce using rule 41 (factor -> ID .)
    LPAREN          shift and go to state 49

  ! LPAREN          [ reduce using rule 41 (factor -> ID .) ]


state 16

    (39) factor -> NUMBER .

    TIMES           reduce using rule 39 (factor -> NUMBER .)
    DIVIDE          reduce using rule 39 (factor -> NUMBER .)
    MODULO          reduce using rule 39 (factor -> NUMBER .)
    EQUALS_EQUALS   reduce using rule 39 (factor -> NUMBER .)
    NOT_EQUALS      reduce using rule 39 (factor -> NUMBER .)
    LESS_THAN       reduce using rule 39 (factor -> NUMBER .)
    GREATER_THAN    reduce using rule 39 (factor -> NUMBER .)
    LESS_EQUALS     reduce using rule 39 (factor -> NUMBER .)
    GREATER_EQUALS  reduce using rule 39 (factor -> NUMBER .)
    PLUS            reduce using rule 39 (factor -> NUMBER .)
    MINUS           reduce using rule 39 (factor -> NUMBER .)
    AND             reduce using rule 39 (factor -> NUMBER .)
    OR              reduce using rule 39 (factor -> NUMBER .)
    ID              reduce using rule 39 (factor -> NUMBER .)
    IF              reduce using rule 39 (factor -> NUMBER .)
    WHILE           reduce using rule 39 (factor -> NUMBER .)
    FOR             reduce using rule 39 (factor -> NUMBER .)
    FUNCTION        reduce using rule 39 (factor -> NUMBER .)
    RETURN          reduce using rule 39 (factor -> NUMBER .)
    BREAK           reduce using rule 39 (factor -> NUMBER .)
    CONTINUE        reduce using rule 39 (factor -> NUMBER .)
    LBRACE          reduce using rule 39 (factor -> NUMBER .)
    INT             reduce using rule 39 (factor -> NUMBER .)
    FLOAT           reduce using rule 39 (factor -> NUMBER .)
    STRING_TYPE     reduce using rule 39 (factor -> NUMBER .)
    BOOL            reduce using rule 39 (factor -> NUMBER .)
    VOID            reduce using rule 39 (factor -> NUMBER .)
    ARRAY           reduce using rule 39 (factor -> NUMBER .)
    NUMBER          reduce using rule 39 (factor -> NUMBER .)
    STRING          reduce using rule 39 (factor -> NUMBER .)
    TRUE            reduce using rule 39 (factor -> NUMBER .)
    FALSE           reduce using rule 39 (factor -> NUMBER .)
    LPAREN          reduce using rule 39 (factor -> NUMBER .)
    NOT             reduce using rule 39 (factor -> NUMBER .)
    $end            reduce using rule 39 (factor -> NUMBER .)
    RPAREN          reduce using rule 39 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 39 (factor -> NUMBER .)
    RBRACE          reduce using rule 39 (factor -> NUMBER .)
    RBRACKET        reduce using rule 39 (factor -> NUMBER .)
    COMMA           reduce using rule 39 (factor -> NUMBER .)


state 17

    (24) expression -> term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor
    (32) term -> term . MODULO factor
    (33) term -> term . EQUALS_EQUALS factor
    (34) term -> term . NOT_EQUALS factor
    (35) term -> term . LESS_THAN factor
    (36) term -> term . GREATER_THAN factor
    (37) term -> term . LESS_EQUALS factor
    (38) term -> term . GREATER_EQUALS factor

    PLUS            reduce using rule 24 (expression -> term .)
    MINUS           reduce using rule 24 (expression -> term .)
    AND             reduce using rule 24 (expression -> term .)
    OR              reduce using rule 24 (expression -> term .)
    ID              reduce using rule 24 (expression -> term .)
    IF              reduce using rule 24 (expression -> term .)
    WHILE           reduce using rule 24 (expression -> term .)
    FOR             reduce using rule 24 (expression -> term .)
    FUNCTION        reduce using rule 24 (expression -> term .)
    RETURN          reduce using rule 24 (expression -> term .)
    BREAK           reduce using rule 24 (expression -> term .)
    CONTINUE        reduce using rule 24 (expression -> term .)
    LBRACE          reduce using rule 24 (expression -> term .)
    INT             reduce using rule 24 (expression -> term .)
    FLOAT           reduce using rule 24 (expression -> term .)
    STRING_TYPE     reduce using rule 24 (expression -> term .)
    BOOL            reduce using rule 24 (expression -> term .)
    VOID            reduce using rule 24 (expression -> term .)
    ARRAY           reduce using rule 24 (expression -> term .)
    NUMBER          reduce using rule 24 (expression -> term .)
    STRING          reduce using rule 24 (expression -> term .)
    TRUE            reduce using rule 24 (expression -> term .)
    FALSE           reduce using rule 24 (expression -> term .)
    LPAREN          reduce using rule 24 (expression -> term .)
    NOT             reduce using rule 24 (expression -> term .)
    $end            reduce using rule 24 (expression -> term .)
    RPAREN          reduce using rule 24 (expression -> term .)
    SEMICOLON       reduce using rule 24 (expression -> term .)
    RBRACE          reduce using rule 24 (expression -> term .)
    RBRACKET        reduce using rule 24 (expression -> term .)
    COMMA           reduce using rule 24 (expression -> term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 52
    EQUALS_EQUALS   shift and go to state 53
    NOT_EQUALS      shift and go to state 54
    LESS_THAN       shift and go to state 55
    GREATER_THAN    shift and go to state 56
    LESS_EQUALS     shift and go to state 57
    GREATER_EQUALS  shift and go to state 58


state 18

    (56) if_statement -> IF . LPAREN expression RPAREN block
    (57) if_statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 59


state 19

    (44) factor -> LPAREN . expression RPAREN
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 60
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 20

    (58) while_statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 62


state 21

    (59) for_statement -> FOR . LPAREN declaration expression SEMICOLON expression RPAREN block

    LPAREN          shift and go to state 63


state 22

    (48) function_declaration -> FUNCTION . type ID LPAREN parameter_list RPAREN block
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32

    type                           shift and go to state 64

state 23

    (60) return_statement -> RETURN . expression SEMICOLON
    (61) return_statement -> RETURN . SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    SEMICOLON       shift and go to state 66
    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 65
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 24

    (62) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 67


state 25

    (63) continue_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 68


state 26

    (14) block -> LBRACE . statement_list RBRACE
    (15) statement_list -> . statement
    (16) statement_list -> . statement_list statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) statement -> . break_statement
    (12) statement -> . continue_statement
    (13) statement -> . block
    (17) declaration -> . type ID EQUALS expression SEMICOLON
    (18) declaration -> . type ID LBRACKET NUMBER RBRACKET SEMICOLON
    (19) declaration -> . type ID SEMICOLON
    (20) assignment -> . ID EQUALS expression SEMICOLON
    (21) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
    (22) assignment -> . ID INCREMENT SEMICOLON
    (23) assignment -> . ID DECREMENT SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (56) if_statement -> . IF LPAREN expression RPAREN block
    (57) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (58) while_statement -> . WHILE LPAREN expression RPAREN block
    (59) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN block
    (48) function_declaration -> . FUNCTION type ID LPAREN parameter_list RPAREN block
    (60) return_statement -> . RETURN expression SEMICOLON
    (61) return_statement -> . RETURN SEMICOLON
    (62) break_statement -> . BREAK SEMICOLON
    (63) continue_statement -> . CONTINUE SEMICOLON
    (14) block -> . LBRACE statement_list RBRACE
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    ID              shift and go to state 15
    IF              shift and go to state 18
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    LBRACE          shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32
    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    statement_list                 shift and go to state 69
    statement                      shift and go to state 70
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    continue_statement             shift and go to state 12
    block                          shift and go to state 13
    type                           shift and go to state 14
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 27

    (64) type -> INT .

    ID              reduce using rule 64 (type -> INT .)


state 28

    (65) type -> FLOAT .

    ID              reduce using rule 65 (type -> FLOAT .)


state 29

    (66) type -> STRING_TYPE .

    ID              reduce using rule 66 (type -> STRING_TYPE .)


state 30

    (67) type -> BOOL .

    ID              reduce using rule 67 (type -> BOOL .)


state 31

    (68) type -> VOID .

    ID              reduce using rule 68 (type -> VOID .)


state 32

    (69) type -> ARRAY .

    ID              reduce using rule 69 (type -> ARRAY .)


state 33

    (29) term -> factor .

    TIMES           reduce using rule 29 (term -> factor .)
    DIVIDE          reduce using rule 29 (term -> factor .)
    MODULO          reduce using rule 29 (term -> factor .)
    EQUALS_EQUALS   reduce using rule 29 (term -> factor .)
    NOT_EQUALS      reduce using rule 29 (term -> factor .)
    LESS_THAN       reduce using rule 29 (term -> factor .)
    GREATER_THAN    reduce using rule 29 (term -> factor .)
    LESS_EQUALS     reduce using rule 29 (term -> factor .)
    GREATER_EQUALS  reduce using rule 29 (term -> factor .)
    PLUS            reduce using rule 29 (term -> factor .)
    MINUS           reduce using rule 29 (term -> factor .)
    AND             reduce using rule 29 (term -> factor .)
    OR              reduce using rule 29 (term -> factor .)
    ID              reduce using rule 29 (term -> factor .)
    IF              reduce using rule 29 (term -> factor .)
    WHILE           reduce using rule 29 (term -> factor .)
    FOR             reduce using rule 29 (term -> factor .)
    FUNCTION        reduce using rule 29 (term -> factor .)
    RETURN          reduce using rule 29 (term -> factor .)
    BREAK           reduce using rule 29 (term -> factor .)
    CONTINUE        reduce using rule 29 (term -> factor .)
    LBRACE          reduce using rule 29 (term -> factor .)
    INT             reduce using rule 29 (term -> factor .)
    FLOAT           reduce using rule 29 (term -> factor .)
    STRING_TYPE     reduce using rule 29 (term -> factor .)
    BOOL            reduce using rule 29 (term -> factor .)
    VOID            reduce using rule 29 (term -> factor .)
    ARRAY           reduce using rule 29 (term -> factor .)
    NUMBER          reduce using rule 29 (term -> factor .)
    STRING          reduce using rule 29 (term -> factor .)
    TRUE            reduce using rule 29 (term -> factor .)
    FALSE           reduce using rule 29 (term -> factor .)
    LPAREN          reduce using rule 29 (term -> factor .)
    NOT             reduce using rule 29 (term -> factor .)
    $end            reduce using rule 29 (term -> factor .)
    RPAREN          reduce using rule 29 (term -> factor .)
    SEMICOLON       reduce using rule 29 (term -> factor .)
    RBRACE          reduce using rule 29 (term -> factor .)
    RBRACKET        reduce using rule 29 (term -> factor .)
    COMMA           reduce using rule 29 (term -> factor .)


state 34

    (40) factor -> STRING .

    TIMES           reduce using rule 40 (factor -> STRING .)
    DIVIDE          reduce using rule 40 (factor -> STRING .)
    MODULO          reduce using rule 40 (factor -> STRING .)
    EQUALS_EQUALS   reduce using rule 40 (factor -> STRING .)
    NOT_EQUALS      reduce using rule 40 (factor -> STRING .)
    LESS_THAN       reduce using rule 40 (factor -> STRING .)
    GREATER_THAN    reduce using rule 40 (factor -> STRING .)
    LESS_EQUALS     reduce using rule 40 (factor -> STRING .)
    GREATER_EQUALS  reduce using rule 40 (factor -> STRING .)
    PLUS            reduce using rule 40 (factor -> STRING .)
    MINUS           reduce using rule 40 (factor -> STRING .)
    AND             reduce using rule 40 (factor -> STRING .)
    OR              reduce using rule 40 (factor -> STRING .)
    ID              reduce using rule 40 (factor -> STRING .)
    IF              reduce using rule 40 (factor -> STRING .)
    WHILE           reduce using rule 40 (factor -> STRING .)
    FOR             reduce using rule 40 (factor -> STRING .)
    FUNCTION        reduce using rule 40 (factor -> STRING .)
    RETURN          reduce using rule 40 (factor -> STRING .)
    BREAK           reduce using rule 40 (factor -> STRING .)
    CONTINUE        reduce using rule 40 (factor -> STRING .)
    LBRACE          reduce using rule 40 (factor -> STRING .)
    INT             reduce using rule 40 (factor -> STRING .)
    FLOAT           reduce using rule 40 (factor -> STRING .)
    STRING_TYPE     reduce using rule 40 (factor -> STRING .)
    BOOL            reduce using rule 40 (factor -> STRING .)
    VOID            reduce using rule 40 (factor -> STRING .)
    ARRAY           reduce using rule 40 (factor -> STRING .)
    NUMBER          reduce using rule 40 (factor -> STRING .)
    STRING          reduce using rule 40 (factor -> STRING .)
    TRUE            reduce using rule 40 (factor -> STRING .)
    FALSE           reduce using rule 40 (factor -> STRING .)
    LPAREN          reduce using rule 40 (factor -> STRING .)
    NOT             reduce using rule 40 (factor -> STRING .)
    $end            reduce using rule 40 (factor -> STRING .)
    RPAREN          reduce using rule 40 (factor -> STRING .)
    SEMICOLON       reduce using rule 40 (factor -> STRING .)
    RBRACE          reduce using rule 40 (factor -> STRING .)
    RBRACKET        reduce using rule 40 (factor -> STRING .)
    COMMA           reduce using rule 40 (factor -> STRING .)


state 35

    (42) factor -> TRUE .

    TIMES           reduce using rule 42 (factor -> TRUE .)
    DIVIDE          reduce using rule 42 (factor -> TRUE .)
    MODULO          reduce using rule 42 (factor -> TRUE .)
    EQUALS_EQUALS   reduce using rule 42 (factor -> TRUE .)
    NOT_EQUALS      reduce using rule 42 (factor -> TRUE .)
    LESS_THAN       reduce using rule 42 (factor -> TRUE .)
    GREATER_THAN    reduce using rule 42 (factor -> TRUE .)
    LESS_EQUALS     reduce using rule 42 (factor -> TRUE .)
    GREATER_EQUALS  reduce using rule 42 (factor -> TRUE .)
    PLUS            reduce using rule 42 (factor -> TRUE .)
    MINUS           reduce using rule 42 (factor -> TRUE .)
    AND             reduce using rule 42 (factor -> TRUE .)
    OR              reduce using rule 42 (factor -> TRUE .)
    ID              reduce using rule 42 (factor -> TRUE .)
    IF              reduce using rule 42 (factor -> TRUE .)
    WHILE           reduce using rule 42 (factor -> TRUE .)
    FOR             reduce using rule 42 (factor -> TRUE .)
    FUNCTION        reduce using rule 42 (factor -> TRUE .)
    RETURN          reduce using rule 42 (factor -> TRUE .)
    BREAK           reduce using rule 42 (factor -> TRUE .)
    CONTINUE        reduce using rule 42 (factor -> TRUE .)
    LBRACE          reduce using rule 42 (factor -> TRUE .)
    INT             reduce using rule 42 (factor -> TRUE .)
    FLOAT           reduce using rule 42 (factor -> TRUE .)
    STRING_TYPE     reduce using rule 42 (factor -> TRUE .)
    BOOL            reduce using rule 42 (factor -> TRUE .)
    VOID            reduce using rule 42 (factor -> TRUE .)
    ARRAY           reduce using rule 42 (factor -> TRUE .)
    NUMBER          reduce using rule 42 (factor -> TRUE .)
    STRING          reduce using rule 42 (factor -> TRUE .)
    TRUE            reduce using rule 42 (factor -> TRUE .)
    FALSE           reduce using rule 42 (factor -> TRUE .)
    LPAREN          reduce using rule 42 (factor -> TRUE .)
    NOT             reduce using rule 42 (factor -> TRUE .)
    $end            reduce using rule 42 (factor -> TRUE .)
    RPAREN          reduce using rule 42 (factor -> TRUE .)
    SEMICOLON       reduce using rule 42 (factor -> TRUE .)
    RBRACE          reduce using rule 42 (factor -> TRUE .)
    RBRACKET        reduce using rule 42 (factor -> TRUE .)
    COMMA           reduce using rule 42 (factor -> TRUE .)


state 36

    (43) factor -> FALSE .

    TIMES           reduce using rule 43 (factor -> FALSE .)
    DIVIDE          reduce using rule 43 (factor -> FALSE .)
    MODULO          reduce using rule 43 (factor -> FALSE .)
    EQUALS_EQUALS   reduce using rule 43 (factor -> FALSE .)
    NOT_EQUALS      reduce using rule 43 (factor -> FALSE .)
    LESS_THAN       reduce using rule 43 (factor -> FALSE .)
    GREATER_THAN    reduce using rule 43 (factor -> FALSE .)
    LESS_EQUALS     reduce using rule 43 (factor -> FALSE .)
    GREATER_EQUALS  reduce using rule 43 (factor -> FALSE .)
    PLUS            reduce using rule 43 (factor -> FALSE .)
    MINUS           reduce using rule 43 (factor -> FALSE .)
    AND             reduce using rule 43 (factor -> FALSE .)
    OR              reduce using rule 43 (factor -> FALSE .)
    ID              reduce using rule 43 (factor -> FALSE .)
    IF              reduce using rule 43 (factor -> FALSE .)
    WHILE           reduce using rule 43 (factor -> FALSE .)
    FOR             reduce using rule 43 (factor -> FALSE .)
    FUNCTION        reduce using rule 43 (factor -> FALSE .)
    RETURN          reduce using rule 43 (factor -> FALSE .)
    BREAK           reduce using rule 43 (factor -> FALSE .)
    CONTINUE        reduce using rule 43 (factor -> FALSE .)
    LBRACE          reduce using rule 43 (factor -> FALSE .)
    INT             reduce using rule 43 (factor -> FALSE .)
    FLOAT           reduce using rule 43 (factor -> FALSE .)
    STRING_TYPE     reduce using rule 43 (factor -> FALSE .)
    BOOL            reduce using rule 43 (factor -> FALSE .)
    VOID            reduce using rule 43 (factor -> FALSE .)
    ARRAY           reduce using rule 43 (factor -> FALSE .)
    NUMBER          reduce using rule 43 (factor -> FALSE .)
    STRING          reduce using rule 43 (factor -> FALSE .)
    TRUE            reduce using rule 43 (factor -> FALSE .)
    FALSE           reduce using rule 43 (factor -> FALSE .)
    LPAREN          reduce using rule 43 (factor -> FALSE .)
    NOT             reduce using rule 43 (factor -> FALSE .)
    $end            reduce using rule 43 (factor -> FALSE .)
    RPAREN          reduce using rule 43 (factor -> FALSE .)
    SEMICOLON       reduce using rule 43 (factor -> FALSE .)
    RBRACE          reduce using rule 43 (factor -> FALSE .)
    RBRACKET        reduce using rule 43 (factor -> FALSE .)
    COMMA           reduce using rule 43 (factor -> FALSE .)


state 37

    (46) factor -> function_call .

    TIMES           reduce using rule 46 (factor -> function_call .)
    DIVIDE          reduce using rule 46 (factor -> function_call .)
    MODULO          reduce using rule 46 (factor -> function_call .)
    EQUALS_EQUALS   reduce using rule 46 (factor -> function_call .)
    NOT_EQUALS      reduce using rule 46 (factor -> function_call .)
    LESS_THAN       reduce using rule 46 (factor -> function_call .)
    GREATER_THAN    reduce using rule 46 (factor -> function_call .)
    LESS_EQUALS     reduce using rule 46 (factor -> function_call .)
    GREATER_EQUALS  reduce using rule 46 (factor -> function_call .)
    PLUS            reduce using rule 46 (factor -> function_call .)
    MINUS           reduce using rule 46 (factor -> function_call .)
    AND             reduce using rule 46 (factor -> function_call .)
    OR              reduce using rule 46 (factor -> function_call .)
    ID              reduce using rule 46 (factor -> function_call .)
    IF              reduce using rule 46 (factor -> function_call .)
    WHILE           reduce using rule 46 (factor -> function_call .)
    FOR             reduce using rule 46 (factor -> function_call .)
    FUNCTION        reduce using rule 46 (factor -> function_call .)
    RETURN          reduce using rule 46 (factor -> function_call .)
    BREAK           reduce using rule 46 (factor -> function_call .)
    CONTINUE        reduce using rule 46 (factor -> function_call .)
    LBRACE          reduce using rule 46 (factor -> function_call .)
    INT             reduce using rule 46 (factor -> function_call .)
    FLOAT           reduce using rule 46 (factor -> function_call .)
    STRING_TYPE     reduce using rule 46 (factor -> function_call .)
    BOOL            reduce using rule 46 (factor -> function_call .)
    VOID            reduce using rule 46 (factor -> function_call .)
    ARRAY           reduce using rule 46 (factor -> function_call .)
    NUMBER          reduce using rule 46 (factor -> function_call .)
    STRING          reduce using rule 46 (factor -> function_call .)
    TRUE            reduce using rule 46 (factor -> function_call .)
    FALSE           reduce using rule 46 (factor -> function_call .)
    LPAREN          reduce using rule 46 (factor -> function_call .)
    NOT             reduce using rule 46 (factor -> function_call .)
    $end            reduce using rule 46 (factor -> function_call .)
    RPAREN          reduce using rule 46 (factor -> function_call .)
    SEMICOLON       reduce using rule 46 (factor -> function_call .)
    RBRACE          reduce using rule 46 (factor -> function_call .)
    RBRACKET        reduce using rule 46 (factor -> function_call .)
    COMMA           reduce using rule 46 (factor -> function_call .)


state 38

    (47) factor -> NOT . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 71
    function_call                  shift and go to state 37

state 39

    (2) program -> program statement .

    ID              reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    FUNCTION        reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    BREAK           reduce using rule 2 (program -> program statement .)
    CONTINUE        reduce using rule 2 (program -> program statement .)
    LBRACE          reduce using rule 2 (program -> program statement .)
    INT             reduce using rule 2 (program -> program statement .)
    FLOAT           reduce using rule 2 (program -> program statement .)
    STRING_TYPE     reduce using rule 2 (program -> program statement .)
    BOOL            reduce using rule 2 (program -> program statement .)
    VOID            reduce using rule 2 (program -> program statement .)
    ARRAY           reduce using rule 2 (program -> program statement .)
    NUMBER          reduce using rule 2 (program -> program statement .)
    STRING          reduce using rule 2 (program -> program statement .)
    TRUE            reduce using rule 2 (program -> program statement .)
    FALSE           reduce using rule 2 (program -> program statement .)
    LPAREN          reduce using rule 2 (program -> program statement .)
    NOT             reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 40

    (25) expression -> expression PLUS . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    term                           shift and go to state 72
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 41

    (26) expression -> expression MINUS . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    term                           shift and go to state 73
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 42

    (27) expression -> expression AND . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    term                           shift and go to state 74
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 43

    (28) expression -> expression OR . term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    term                           shift and go to state 75
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 44

    (17) declaration -> type ID . EQUALS expression SEMICOLON
    (18) declaration -> type ID . LBRACKET NUMBER RBRACKET SEMICOLON
    (19) declaration -> type ID . SEMICOLON

    EQUALS          shift and go to state 76
    LBRACKET        shift and go to state 78
    SEMICOLON       shift and go to state 77


state 45

    (20) assignment -> ID EQUALS . expression SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 79
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 46

    (21) assignment -> ID LBRACKET . expression RBRACKET EQUALS expression SEMICOLON
    (45) factor -> ID LBRACKET . expression RBRACKET
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 80
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 47

    (22) assignment -> ID INCREMENT . SEMICOLON

    SEMICOLON       shift and go to state 81


state 48

    (23) assignment -> ID DECREMENT . SEMICOLON

    SEMICOLON       shift and go to state 82


state 49

    (52) function_call -> ID LPAREN . argument_list RPAREN
    (53) argument_list -> . expression
    (54) argument_list -> . argument_list COMMA expression
    (55) argument_list -> . empty
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (70) empty -> .
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    RPAREN          reduce using rule 70 (empty -> .)
    COMMA           reduce using rule 70 (empty -> .)
    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    argument_list                  shift and go to state 83
    expression                     shift and go to state 84
    empty                          shift and go to state 85
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 50

    (30) term -> term TIMES . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 86
    function_call                  shift and go to state 37

state 51

    (31) term -> term DIVIDE . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 87
    function_call                  shift and go to state 37

state 52

    (32) term -> term MODULO . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 88
    function_call                  shift and go to state 37

state 53

    (33) term -> term EQUALS_EQUALS . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 89
    function_call                  shift and go to state 37

state 54

    (34) term -> term NOT_EQUALS . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 90
    function_call                  shift and go to state 37

state 55

    (35) term -> term LESS_THAN . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 91
    function_call                  shift and go to state 37

state 56

    (36) term -> term GREATER_THAN . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 92
    function_call                  shift and go to state 37

state 57

    (37) term -> term LESS_EQUALS . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 93
    function_call                  shift and go to state 37

state 58

    (38) term -> term GREATER_EQUALS . factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    factor                         shift and go to state 94
    function_call                  shift and go to state 37

state 59

    (56) if_statement -> IF LPAREN . expression RPAREN block
    (57) if_statement -> IF LPAREN . expression RPAREN block ELSE block
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 95
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 60

    (44) factor -> LPAREN expression . RPAREN
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 61

    (41) factor -> ID .
    (45) factor -> ID . LBRACKET expression RBRACKET
    (52) function_call -> ID . LPAREN argument_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    TIMES           reduce using rule 41 (factor -> ID .)
    DIVIDE          reduce using rule 41 (factor -> ID .)
    MODULO          reduce using rule 41 (factor -> ID .)
    EQUALS_EQUALS   reduce using rule 41 (factor -> ID .)
    NOT_EQUALS      reduce using rule 41 (factor -> ID .)
    LESS_THAN       reduce using rule 41 (factor -> ID .)
    GREATER_THAN    reduce using rule 41 (factor -> ID .)
    LESS_EQUALS     reduce using rule 41 (factor -> ID .)
    GREATER_EQUALS  reduce using rule 41 (factor -> ID .)
    RPAREN          reduce using rule 41 (factor -> ID .)
    PLUS            reduce using rule 41 (factor -> ID .)
    MINUS           reduce using rule 41 (factor -> ID .)
    AND             reduce using rule 41 (factor -> ID .)
    OR              reduce using rule 41 (factor -> ID .)
    SEMICOLON       reduce using rule 41 (factor -> ID .)
    ID              reduce using rule 41 (factor -> ID .)
    IF              reduce using rule 41 (factor -> ID .)
    WHILE           reduce using rule 41 (factor -> ID .)
    FOR             reduce using rule 41 (factor -> ID .)
    FUNCTION        reduce using rule 41 (factor -> ID .)
    RETURN          reduce using rule 41 (factor -> ID .)
    BREAK           reduce using rule 41 (factor -> ID .)
    CONTINUE        reduce using rule 41 (factor -> ID .)
    LBRACE          reduce using rule 41 (factor -> ID .)
    INT             reduce using rule 41 (factor -> ID .)
    FLOAT           reduce using rule 41 (factor -> ID .)
    STRING_TYPE     reduce using rule 41 (factor -> ID .)
    BOOL            reduce using rule 41 (factor -> ID .)
    VOID            reduce using rule 41 (factor -> ID .)
    ARRAY           reduce using rule 41 (factor -> ID .)
    NUMBER          reduce using rule 41 (factor -> ID .)
    STRING          reduce using rule 41 (factor -> ID .)
    TRUE            reduce using rule 41 (factor -> ID .)
    FALSE           reduce using rule 41 (factor -> ID .)
    NOT             reduce using rule 41 (factor -> ID .)
    $end            reduce using rule 41 (factor -> ID .)
    RBRACE          reduce using rule 41 (factor -> ID .)
    RBRACKET        reduce using rule 41 (factor -> ID .)
    COMMA           reduce using rule 41 (factor -> ID .)
    LBRACKET        shift and go to state 97
    LPAREN          shift and go to state 49

  ! LPAREN          [ reduce using rule 41 (factor -> ID .) ]


state 62

    (58) while_statement -> WHILE LPAREN . expression RPAREN block
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 98
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 63

    (59) for_statement -> FOR LPAREN . declaration expression SEMICOLON expression RPAREN block
    (17) declaration -> . type ID EQUALS expression SEMICOLON
    (18) declaration -> . type ID LBRACKET NUMBER RBRACKET SEMICOLON
    (19) declaration -> . type ID SEMICOLON
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32

    declaration                    shift and go to state 99
    type                           shift and go to state 14

state 64

    (48) function_declaration -> FUNCTION type . ID LPAREN parameter_list RPAREN block

    ID              shift and go to state 100


state 65

    (60) return_statement -> RETURN expression . SEMICOLON
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    SEMICOLON       shift and go to state 101
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 66

    (61) return_statement -> RETURN SEMICOLON .

    ID              reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    FUNCTION        reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    CONTINUE        reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    INT             reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    STRING_TYPE     reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    ARRAY           reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    NOT             reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    $end            reduce using rule 61 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 61 (return_statement -> RETURN SEMICOLON .)


state 67

    (62) break_statement -> BREAK SEMICOLON .

    ID              reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    FUNCTION        reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    LBRACE          reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    INT             reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    FLOAT           reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    STRING_TYPE     reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    BOOL            reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    VOID            reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    ARRAY           reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    STRING          reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    TRUE            reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    FALSE           reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    NOT             reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    $end            reduce using rule 62 (break_statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 62 (break_statement -> BREAK SEMICOLON .)


state 68

    (63) continue_statement -> CONTINUE SEMICOLON .

    ID              reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    FUNCTION        reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    LBRACE          reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    INT             reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    FLOAT           reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    STRING_TYPE     reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    BOOL            reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    VOID            reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    ARRAY           reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    NUMBER          reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    STRING          reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    TRUE            reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    FALSE           reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    LPAREN          reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    NOT             reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    $end            reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)
    RBRACE          reduce using rule 63 (continue_statement -> CONTINUE SEMICOLON .)


state 69

    (14) block -> LBRACE statement_list . RBRACE
    (16) statement_list -> statement_list . statement
    (3) statement -> . declaration
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_declaration
    (10) statement -> . return_statement
    (11) statement -> . break_statement
    (12) statement -> . continue_statement
    (13) statement -> . block
    (17) declaration -> . type ID EQUALS expression SEMICOLON
    (18) declaration -> . type ID LBRACKET NUMBER RBRACKET SEMICOLON
    (19) declaration -> . type ID SEMICOLON
    (20) assignment -> . ID EQUALS expression SEMICOLON
    (21) assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
    (22) assignment -> . ID INCREMENT SEMICOLON
    (23) assignment -> . ID DECREMENT SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (56) if_statement -> . IF LPAREN expression RPAREN block
    (57) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (58) while_statement -> . WHILE LPAREN expression RPAREN block
    (59) for_statement -> . FOR LPAREN declaration expression SEMICOLON expression RPAREN block
    (48) function_declaration -> . FUNCTION type ID LPAREN parameter_list RPAREN block
    (60) return_statement -> . RETURN expression SEMICOLON
    (61) return_statement -> . RETURN SEMICOLON
    (62) break_statement -> . BREAK SEMICOLON
    (63) continue_statement -> . CONTINUE SEMICOLON
    (14) block -> . LBRACE statement_list RBRACE
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    RBRACE          shift and go to state 102
    ID              shift and go to state 15
    IF              shift and go to state 18
    WHILE           shift and go to state 20
    FOR             shift and go to state 21
    FUNCTION        shift and go to state 22
    RETURN          shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    LBRACE          shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32
    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    statement                      shift and go to state 103
    declaration                    shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    continue_statement             shift and go to state 12
    block                          shift and go to state 13
    type                           shift and go to state 14
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 70

    (15) statement_list -> statement .

    RBRACE          reduce using rule 15 (statement_list -> statement .)
    ID              reduce using rule 15 (statement_list -> statement .)
    IF              reduce using rule 15 (statement_list -> statement .)
    WHILE           reduce using rule 15 (statement_list -> statement .)
    FOR             reduce using rule 15 (statement_list -> statement .)
    FUNCTION        reduce using rule 15 (statement_list -> statement .)
    RETURN          reduce using rule 15 (statement_list -> statement .)
    BREAK           reduce using rule 15 (statement_list -> statement .)
    CONTINUE        reduce using rule 15 (statement_list -> statement .)
    LBRACE          reduce using rule 15 (statement_list -> statement .)
    INT             reduce using rule 15 (statement_list -> statement .)
    FLOAT           reduce using rule 15 (statement_list -> statement .)
    STRING_TYPE     reduce using rule 15 (statement_list -> statement .)
    BOOL            reduce using rule 15 (statement_list -> statement .)
    VOID            reduce using rule 15 (statement_list -> statement .)
    ARRAY           reduce using rule 15 (statement_list -> statement .)
    NUMBER          reduce using rule 15 (statement_list -> statement .)
    STRING          reduce using rule 15 (statement_list -> statement .)
    TRUE            reduce using rule 15 (statement_list -> statement .)
    FALSE           reduce using rule 15 (statement_list -> statement .)
    LPAREN          reduce using rule 15 (statement_list -> statement .)
    NOT             reduce using rule 15 (statement_list -> statement .)


state 71

    (47) factor -> NOT factor .

    TIMES           reduce using rule 47 (factor -> NOT factor .)
    DIVIDE          reduce using rule 47 (factor -> NOT factor .)
    MODULO          reduce using rule 47 (factor -> NOT factor .)
    EQUALS_EQUALS   reduce using rule 47 (factor -> NOT factor .)
    NOT_EQUALS      reduce using rule 47 (factor -> NOT factor .)
    LESS_THAN       reduce using rule 47 (factor -> NOT factor .)
    GREATER_THAN    reduce using rule 47 (factor -> NOT factor .)
    LESS_EQUALS     reduce using rule 47 (factor -> NOT factor .)
    GREATER_EQUALS  reduce using rule 47 (factor -> NOT factor .)
    PLUS            reduce using rule 47 (factor -> NOT factor .)
    MINUS           reduce using rule 47 (factor -> NOT factor .)
    AND             reduce using rule 47 (factor -> NOT factor .)
    OR              reduce using rule 47 (factor -> NOT factor .)
    ID              reduce using rule 47 (factor -> NOT factor .)
    IF              reduce using rule 47 (factor -> NOT factor .)
    WHILE           reduce using rule 47 (factor -> NOT factor .)
    FOR             reduce using rule 47 (factor -> NOT factor .)
    FUNCTION        reduce using rule 47 (factor -> NOT factor .)
    RETURN          reduce using rule 47 (factor -> NOT factor .)
    BREAK           reduce using rule 47 (factor -> NOT factor .)
    CONTINUE        reduce using rule 47 (factor -> NOT factor .)
    LBRACE          reduce using rule 47 (factor -> NOT factor .)
    INT             reduce using rule 47 (factor -> NOT factor .)
    FLOAT           reduce using rule 47 (factor -> NOT factor .)
    STRING_TYPE     reduce using rule 47 (factor -> NOT factor .)
    BOOL            reduce using rule 47 (factor -> NOT factor .)
    VOID            reduce using rule 47 (factor -> NOT factor .)
    ARRAY           reduce using rule 47 (factor -> NOT factor .)
    NUMBER          reduce using rule 47 (factor -> NOT factor .)
    STRING          reduce using rule 47 (factor -> NOT factor .)
    TRUE            reduce using rule 47 (factor -> NOT factor .)
    FALSE           reduce using rule 47 (factor -> NOT factor .)
    LPAREN          reduce using rule 47 (factor -> NOT factor .)
    NOT             reduce using rule 47 (factor -> NOT factor .)
    $end            reduce using rule 47 (factor -> NOT factor .)
    RPAREN          reduce using rule 47 (factor -> NOT factor .)
    SEMICOLON       reduce using rule 47 (factor -> NOT factor .)
    RBRACE          reduce using rule 47 (factor -> NOT factor .)
    RBRACKET        reduce using rule 47 (factor -> NOT factor .)
    COMMA           reduce using rule 47 (factor -> NOT factor .)


state 72

    (25) expression -> expression PLUS term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor
    (32) term -> term . MODULO factor
    (33) term -> term . EQUALS_EQUALS factor
    (34) term -> term . NOT_EQUALS factor
    (35) term -> term . LESS_THAN factor
    (36) term -> term . GREATER_THAN factor
    (37) term -> term . LESS_EQUALS factor
    (38) term -> term . GREATER_EQUALS factor

    PLUS            reduce using rule 25 (expression -> expression PLUS term .)
    MINUS           reduce using rule 25 (expression -> expression PLUS term .)
    AND             reduce using rule 25 (expression -> expression PLUS term .)
    OR              reduce using rule 25 (expression -> expression PLUS term .)
    ID              reduce using rule 25 (expression -> expression PLUS term .)
    IF              reduce using rule 25 (expression -> expression PLUS term .)
    WHILE           reduce using rule 25 (expression -> expression PLUS term .)
    FOR             reduce using rule 25 (expression -> expression PLUS term .)
    FUNCTION        reduce using rule 25 (expression -> expression PLUS term .)
    RETURN          reduce using rule 25 (expression -> expression PLUS term .)
    BREAK           reduce using rule 25 (expression -> expression PLUS term .)
    CONTINUE        reduce using rule 25 (expression -> expression PLUS term .)
    LBRACE          reduce using rule 25 (expression -> expression PLUS term .)
    INT             reduce using rule 25 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 25 (expression -> expression PLUS term .)
    STRING_TYPE     reduce using rule 25 (expression -> expression PLUS term .)
    BOOL            reduce using rule 25 (expression -> expression PLUS term .)
    VOID            reduce using rule 25 (expression -> expression PLUS term .)
    ARRAY           reduce using rule 25 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 25 (expression -> expression PLUS term .)
    STRING          reduce using rule 25 (expression -> expression PLUS term .)
    TRUE            reduce using rule 25 (expression -> expression PLUS term .)
    FALSE           reduce using rule 25 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 25 (expression -> expression PLUS term .)
    NOT             reduce using rule 25 (expression -> expression PLUS term .)
    $end            reduce using rule 25 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 25 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 25 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 25 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 25 (expression -> expression PLUS term .)
    COMMA           reduce using rule 25 (expression -> expression PLUS term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 52
    EQUALS_EQUALS   shift and go to state 53
    NOT_EQUALS      shift and go to state 54
    LESS_THAN       shift and go to state 55
    GREATER_THAN    shift and go to state 56
    LESS_EQUALS     shift and go to state 57
    GREATER_EQUALS  shift and go to state 58


state 73

    (26) expression -> expression MINUS term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor
    (32) term -> term . MODULO factor
    (33) term -> term . EQUALS_EQUALS factor
    (34) term -> term . NOT_EQUALS factor
    (35) term -> term . LESS_THAN factor
    (36) term -> term . GREATER_THAN factor
    (37) term -> term . LESS_EQUALS factor
    (38) term -> term . GREATER_EQUALS factor

    PLUS            reduce using rule 26 (expression -> expression MINUS term .)
    MINUS           reduce using rule 26 (expression -> expression MINUS term .)
    AND             reduce using rule 26 (expression -> expression MINUS term .)
    OR              reduce using rule 26 (expression -> expression MINUS term .)
    ID              reduce using rule 26 (expression -> expression MINUS term .)
    IF              reduce using rule 26 (expression -> expression MINUS term .)
    WHILE           reduce using rule 26 (expression -> expression MINUS term .)
    FOR             reduce using rule 26 (expression -> expression MINUS term .)
    FUNCTION        reduce using rule 26 (expression -> expression MINUS term .)
    RETURN          reduce using rule 26 (expression -> expression MINUS term .)
    BREAK           reduce using rule 26 (expression -> expression MINUS term .)
    CONTINUE        reduce using rule 26 (expression -> expression MINUS term .)
    LBRACE          reduce using rule 26 (expression -> expression MINUS term .)
    INT             reduce using rule 26 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 26 (expression -> expression MINUS term .)
    STRING_TYPE     reduce using rule 26 (expression -> expression MINUS term .)
    BOOL            reduce using rule 26 (expression -> expression MINUS term .)
    VOID            reduce using rule 26 (expression -> expression MINUS term .)
    ARRAY           reduce using rule 26 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 26 (expression -> expression MINUS term .)
    STRING          reduce using rule 26 (expression -> expression MINUS term .)
    TRUE            reduce using rule 26 (expression -> expression MINUS term .)
    FALSE           reduce using rule 26 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 26 (expression -> expression MINUS term .)
    NOT             reduce using rule 26 (expression -> expression MINUS term .)
    $end            reduce using rule 26 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 26 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 26 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 26 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 26 (expression -> expression MINUS term .)
    COMMA           reduce using rule 26 (expression -> expression MINUS term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 52
    EQUALS_EQUALS   shift and go to state 53
    NOT_EQUALS      shift and go to state 54
    LESS_THAN       shift and go to state 55
    GREATER_THAN    shift and go to state 56
    LESS_EQUALS     shift and go to state 57
    GREATER_EQUALS  shift and go to state 58


state 74

    (27) expression -> expression AND term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor
    (32) term -> term . MODULO factor
    (33) term -> term . EQUALS_EQUALS factor
    (34) term -> term . NOT_EQUALS factor
    (35) term -> term . LESS_THAN factor
    (36) term -> term . GREATER_THAN factor
    (37) term -> term . LESS_EQUALS factor
    (38) term -> term . GREATER_EQUALS factor

    PLUS            reduce using rule 27 (expression -> expression AND term .)
    MINUS           reduce using rule 27 (expression -> expression AND term .)
    AND             reduce using rule 27 (expression -> expression AND term .)
    OR              reduce using rule 27 (expression -> expression AND term .)
    ID              reduce using rule 27 (expression -> expression AND term .)
    IF              reduce using rule 27 (expression -> expression AND term .)
    WHILE           reduce using rule 27 (expression -> expression AND term .)
    FOR             reduce using rule 27 (expression -> expression AND term .)
    FUNCTION        reduce using rule 27 (expression -> expression AND term .)
    RETURN          reduce using rule 27 (expression -> expression AND term .)
    BREAK           reduce using rule 27 (expression -> expression AND term .)
    CONTINUE        reduce using rule 27 (expression -> expression AND term .)
    LBRACE          reduce using rule 27 (expression -> expression AND term .)
    INT             reduce using rule 27 (expression -> expression AND term .)
    FLOAT           reduce using rule 27 (expression -> expression AND term .)
    STRING_TYPE     reduce using rule 27 (expression -> expression AND term .)
    BOOL            reduce using rule 27 (expression -> expression AND term .)
    VOID            reduce using rule 27 (expression -> expression AND term .)
    ARRAY           reduce using rule 27 (expression -> expression AND term .)
    NUMBER          reduce using rule 27 (expression -> expression AND term .)
    STRING          reduce using rule 27 (expression -> expression AND term .)
    TRUE            reduce using rule 27 (expression -> expression AND term .)
    FALSE           reduce using rule 27 (expression -> expression AND term .)
    LPAREN          reduce using rule 27 (expression -> expression AND term .)
    NOT             reduce using rule 27 (expression -> expression AND term .)
    $end            reduce using rule 27 (expression -> expression AND term .)
    RPAREN          reduce using rule 27 (expression -> expression AND term .)
    SEMICOLON       reduce using rule 27 (expression -> expression AND term .)
    RBRACE          reduce using rule 27 (expression -> expression AND term .)
    RBRACKET        reduce using rule 27 (expression -> expression AND term .)
    COMMA           reduce using rule 27 (expression -> expression AND term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 52
    EQUALS_EQUALS   shift and go to state 53
    NOT_EQUALS      shift and go to state 54
    LESS_THAN       shift and go to state 55
    GREATER_THAN    shift and go to state 56
    LESS_EQUALS     shift and go to state 57
    GREATER_EQUALS  shift and go to state 58


state 75

    (28) expression -> expression OR term .
    (30) term -> term . TIMES factor
    (31) term -> term . DIVIDE factor
    (32) term -> term . MODULO factor
    (33) term -> term . EQUALS_EQUALS factor
    (34) term -> term . NOT_EQUALS factor
    (35) term -> term . LESS_THAN factor
    (36) term -> term . GREATER_THAN factor
    (37) term -> term . LESS_EQUALS factor
    (38) term -> term . GREATER_EQUALS factor

    PLUS            reduce using rule 28 (expression -> expression OR term .)
    MINUS           reduce using rule 28 (expression -> expression OR term .)
    AND             reduce using rule 28 (expression -> expression OR term .)
    OR              reduce using rule 28 (expression -> expression OR term .)
    ID              reduce using rule 28 (expression -> expression OR term .)
    IF              reduce using rule 28 (expression -> expression OR term .)
    WHILE           reduce using rule 28 (expression -> expression OR term .)
    FOR             reduce using rule 28 (expression -> expression OR term .)
    FUNCTION        reduce using rule 28 (expression -> expression OR term .)
    RETURN          reduce using rule 28 (expression -> expression OR term .)
    BREAK           reduce using rule 28 (expression -> expression OR term .)
    CONTINUE        reduce using rule 28 (expression -> expression OR term .)
    LBRACE          reduce using rule 28 (expression -> expression OR term .)
    INT             reduce using rule 28 (expression -> expression OR term .)
    FLOAT           reduce using rule 28 (expression -> expression OR term .)
    STRING_TYPE     reduce using rule 28 (expression -> expression OR term .)
    BOOL            reduce using rule 28 (expression -> expression OR term .)
    VOID            reduce using rule 28 (expression -> expression OR term .)
    ARRAY           reduce using rule 28 (expression -> expression OR term .)
    NUMBER          reduce using rule 28 (expression -> expression OR term .)
    STRING          reduce using rule 28 (expression -> expression OR term .)
    TRUE            reduce using rule 28 (expression -> expression OR term .)
    FALSE           reduce using rule 28 (expression -> expression OR term .)
    LPAREN          reduce using rule 28 (expression -> expression OR term .)
    NOT             reduce using rule 28 (expression -> expression OR term .)
    $end            reduce using rule 28 (expression -> expression OR term .)
    RPAREN          reduce using rule 28 (expression -> expression OR term .)
    SEMICOLON       reduce using rule 28 (expression -> expression OR term .)
    RBRACE          reduce using rule 28 (expression -> expression OR term .)
    RBRACKET        reduce using rule 28 (expression -> expression OR term .)
    COMMA           reduce using rule 28 (expression -> expression OR term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MODULO          shift and go to state 52
    EQUALS_EQUALS   shift and go to state 53
    NOT_EQUALS      shift and go to state 54
    LESS_THAN       shift and go to state 55
    GREATER_THAN    shift and go to state 56
    LESS_EQUALS     shift and go to state 57
    GREATER_EQUALS  shift and go to state 58


state 76

    (17) declaration -> type ID EQUALS . expression SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 104
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 77

    (19) declaration -> type ID SEMICOLON .

    ID              reduce using rule 19 (declaration -> type ID SEMICOLON .)
    IF              reduce using rule 19 (declaration -> type ID SEMICOLON .)
    WHILE           reduce using rule 19 (declaration -> type ID SEMICOLON .)
    FOR             reduce using rule 19 (declaration -> type ID SEMICOLON .)
    FUNCTION        reduce using rule 19 (declaration -> type ID SEMICOLON .)
    RETURN          reduce using rule 19 (declaration -> type ID SEMICOLON .)
    BREAK           reduce using rule 19 (declaration -> type ID SEMICOLON .)
    CONTINUE        reduce using rule 19 (declaration -> type ID SEMICOLON .)
    LBRACE          reduce using rule 19 (declaration -> type ID SEMICOLON .)
    INT             reduce using rule 19 (declaration -> type ID SEMICOLON .)
    FLOAT           reduce using rule 19 (declaration -> type ID SEMICOLON .)
    STRING_TYPE     reduce using rule 19 (declaration -> type ID SEMICOLON .)
    BOOL            reduce using rule 19 (declaration -> type ID SEMICOLON .)
    VOID            reduce using rule 19 (declaration -> type ID SEMICOLON .)
    ARRAY           reduce using rule 19 (declaration -> type ID SEMICOLON .)
    NUMBER          reduce using rule 19 (declaration -> type ID SEMICOLON .)
    STRING          reduce using rule 19 (declaration -> type ID SEMICOLON .)
    TRUE            reduce using rule 19 (declaration -> type ID SEMICOLON .)
    FALSE           reduce using rule 19 (declaration -> type ID SEMICOLON .)
    LPAREN          reduce using rule 19 (declaration -> type ID SEMICOLON .)
    NOT             reduce using rule 19 (declaration -> type ID SEMICOLON .)
    $end            reduce using rule 19 (declaration -> type ID SEMICOLON .)
    RBRACE          reduce using rule 19 (declaration -> type ID SEMICOLON .)


state 78

    (18) declaration -> type ID LBRACKET . NUMBER RBRACKET SEMICOLON

    NUMBER          shift and go to state 105


state 79

    (20) assignment -> ID EQUALS expression . SEMICOLON
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    SEMICOLON       shift and go to state 106
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 80

    (21) assignment -> ID LBRACKET expression . RBRACKET EQUALS expression SEMICOLON
    (45) factor -> ID LBRACKET expression . RBRACKET
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RBRACKET        shift and go to state 107
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 81

    (22) assignment -> ID INCREMENT SEMICOLON .

    ID              reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    IF              reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    WHILE           reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    FOR             reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    FUNCTION        reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    RETURN          reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    BREAK           reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    CONTINUE        reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    LBRACE          reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    INT             reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    FLOAT           reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    STRING_TYPE     reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    BOOL            reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    VOID            reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    ARRAY           reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    NUMBER          reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    STRING          reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    TRUE            reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    FALSE           reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    LPAREN          reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    NOT             reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    $end            reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)
    RBRACE          reduce using rule 22 (assignment -> ID INCREMENT SEMICOLON .)


state 82

    (23) assignment -> ID DECREMENT SEMICOLON .

    ID              reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    IF              reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    WHILE           reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    FOR             reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    FUNCTION        reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    RETURN          reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    BREAK           reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    CONTINUE        reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    LBRACE          reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    INT             reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    FLOAT           reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    STRING_TYPE     reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    BOOL            reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    VOID            reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    ARRAY           reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    NUMBER          reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    STRING          reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    TRUE            reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    FALSE           reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    LPAREN          reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    NOT             reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    $end            reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)
    RBRACE          reduce using rule 23 (assignment -> ID DECREMENT SEMICOLON .)


state 83

    (52) function_call -> ID LPAREN argument_list . RPAREN
    (54) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 108
    COMMA           shift and go to state 109


state 84

    (53) argument_list -> expression .
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RPAREN          reduce using rule 53 (argument_list -> expression .)
    COMMA           reduce using rule 53 (argument_list -> expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 85

    (55) argument_list -> empty .

    RPAREN          reduce using rule 55 (argument_list -> empty .)
    COMMA           reduce using rule 55 (argument_list -> empty .)


state 86

    (30) term -> term TIMES factor .

    TIMES           reduce using rule 30 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 30 (term -> term TIMES factor .)
    MODULO          reduce using rule 30 (term -> term TIMES factor .)
    EQUALS_EQUALS   reduce using rule 30 (term -> term TIMES factor .)
    NOT_EQUALS      reduce using rule 30 (term -> term TIMES factor .)
    LESS_THAN       reduce using rule 30 (term -> term TIMES factor .)
    GREATER_THAN    reduce using rule 30 (term -> term TIMES factor .)
    LESS_EQUALS     reduce using rule 30 (term -> term TIMES factor .)
    GREATER_EQUALS  reduce using rule 30 (term -> term TIMES factor .)
    PLUS            reduce using rule 30 (term -> term TIMES factor .)
    MINUS           reduce using rule 30 (term -> term TIMES factor .)
    AND             reduce using rule 30 (term -> term TIMES factor .)
    OR              reduce using rule 30 (term -> term TIMES factor .)
    ID              reduce using rule 30 (term -> term TIMES factor .)
    IF              reduce using rule 30 (term -> term TIMES factor .)
    WHILE           reduce using rule 30 (term -> term TIMES factor .)
    FOR             reduce using rule 30 (term -> term TIMES factor .)
    FUNCTION        reduce using rule 30 (term -> term TIMES factor .)
    RETURN          reduce using rule 30 (term -> term TIMES factor .)
    BREAK           reduce using rule 30 (term -> term TIMES factor .)
    CONTINUE        reduce using rule 30 (term -> term TIMES factor .)
    LBRACE          reduce using rule 30 (term -> term TIMES factor .)
    INT             reduce using rule 30 (term -> term TIMES factor .)
    FLOAT           reduce using rule 30 (term -> term TIMES factor .)
    STRING_TYPE     reduce using rule 30 (term -> term TIMES factor .)
    BOOL            reduce using rule 30 (term -> term TIMES factor .)
    VOID            reduce using rule 30 (term -> term TIMES factor .)
    ARRAY           reduce using rule 30 (term -> term TIMES factor .)
    NUMBER          reduce using rule 30 (term -> term TIMES factor .)
    STRING          reduce using rule 30 (term -> term TIMES factor .)
    TRUE            reduce using rule 30 (term -> term TIMES factor .)
    FALSE           reduce using rule 30 (term -> term TIMES factor .)
    LPAREN          reduce using rule 30 (term -> term TIMES factor .)
    NOT             reduce using rule 30 (term -> term TIMES factor .)
    $end            reduce using rule 30 (term -> term TIMES factor .)
    RPAREN          reduce using rule 30 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 30 (term -> term TIMES factor .)
    RBRACE          reduce using rule 30 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 30 (term -> term TIMES factor .)
    COMMA           reduce using rule 30 (term -> term TIMES factor .)


state 87

    (31) term -> term DIVIDE factor .

    TIMES           reduce using rule 31 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 31 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 31 (term -> term DIVIDE factor .)
    EQUALS_EQUALS   reduce using rule 31 (term -> term DIVIDE factor .)
    NOT_EQUALS      reduce using rule 31 (term -> term DIVIDE factor .)
    LESS_THAN       reduce using rule 31 (term -> term DIVIDE factor .)
    GREATER_THAN    reduce using rule 31 (term -> term DIVIDE factor .)
    LESS_EQUALS     reduce using rule 31 (term -> term DIVIDE factor .)
    GREATER_EQUALS  reduce using rule 31 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 31 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 31 (term -> term DIVIDE factor .)
    AND             reduce using rule 31 (term -> term DIVIDE factor .)
    OR              reduce using rule 31 (term -> term DIVIDE factor .)
    ID              reduce using rule 31 (term -> term DIVIDE factor .)
    IF              reduce using rule 31 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 31 (term -> term DIVIDE factor .)
    FOR             reduce using rule 31 (term -> term DIVIDE factor .)
    FUNCTION        reduce using rule 31 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 31 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 31 (term -> term DIVIDE factor .)
    CONTINUE        reduce using rule 31 (term -> term DIVIDE factor .)
    LBRACE          reduce using rule 31 (term -> term DIVIDE factor .)
    INT             reduce using rule 31 (term -> term DIVIDE factor .)
    FLOAT           reduce using rule 31 (term -> term DIVIDE factor .)
    STRING_TYPE     reduce using rule 31 (term -> term DIVIDE factor .)
    BOOL            reduce using rule 31 (term -> term DIVIDE factor .)
    VOID            reduce using rule 31 (term -> term DIVIDE factor .)
    ARRAY           reduce using rule 31 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 31 (term -> term DIVIDE factor .)
    STRING          reduce using rule 31 (term -> term DIVIDE factor .)
    TRUE            reduce using rule 31 (term -> term DIVIDE factor .)
    FALSE           reduce using rule 31 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 31 (term -> term DIVIDE factor .)
    NOT             reduce using rule 31 (term -> term DIVIDE factor .)
    $end            reduce using rule 31 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 31 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 31 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 31 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 31 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 31 (term -> term DIVIDE factor .)


state 88

    (32) term -> term MODULO factor .

    TIMES           reduce using rule 32 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 32 (term -> term MODULO factor .)
    MODULO          reduce using rule 32 (term -> term MODULO factor .)
    EQUALS_EQUALS   reduce using rule 32 (term -> term MODULO factor .)
    NOT_EQUALS      reduce using rule 32 (term -> term MODULO factor .)
    LESS_THAN       reduce using rule 32 (term -> term MODULO factor .)
    GREATER_THAN    reduce using rule 32 (term -> term MODULO factor .)
    LESS_EQUALS     reduce using rule 32 (term -> term MODULO factor .)
    GREATER_EQUALS  reduce using rule 32 (term -> term MODULO factor .)
    PLUS            reduce using rule 32 (term -> term MODULO factor .)
    MINUS           reduce using rule 32 (term -> term MODULO factor .)
    AND             reduce using rule 32 (term -> term MODULO factor .)
    OR              reduce using rule 32 (term -> term MODULO factor .)
    ID              reduce using rule 32 (term -> term MODULO factor .)
    IF              reduce using rule 32 (term -> term MODULO factor .)
    WHILE           reduce using rule 32 (term -> term MODULO factor .)
    FOR             reduce using rule 32 (term -> term MODULO factor .)
    FUNCTION        reduce using rule 32 (term -> term MODULO factor .)
    RETURN          reduce using rule 32 (term -> term MODULO factor .)
    BREAK           reduce using rule 32 (term -> term MODULO factor .)
    CONTINUE        reduce using rule 32 (term -> term MODULO factor .)
    LBRACE          reduce using rule 32 (term -> term MODULO factor .)
    INT             reduce using rule 32 (term -> term MODULO factor .)
    FLOAT           reduce using rule 32 (term -> term MODULO factor .)
    STRING_TYPE     reduce using rule 32 (term -> term MODULO factor .)
    BOOL            reduce using rule 32 (term -> term MODULO factor .)
    VOID            reduce using rule 32 (term -> term MODULO factor .)
    ARRAY           reduce using rule 32 (term -> term MODULO factor .)
    NUMBER          reduce using rule 32 (term -> term MODULO factor .)
    STRING          reduce using rule 32 (term -> term MODULO factor .)
    TRUE            reduce using rule 32 (term -> term MODULO factor .)
    FALSE           reduce using rule 32 (term -> term MODULO factor .)
    LPAREN          reduce using rule 32 (term -> term MODULO factor .)
    NOT             reduce using rule 32 (term -> term MODULO factor .)
    $end            reduce using rule 32 (term -> term MODULO factor .)
    RPAREN          reduce using rule 32 (term -> term MODULO factor .)
    SEMICOLON       reduce using rule 32 (term -> term MODULO factor .)
    RBRACE          reduce using rule 32 (term -> term MODULO factor .)
    RBRACKET        reduce using rule 32 (term -> term MODULO factor .)
    COMMA           reduce using rule 32 (term -> term MODULO factor .)


state 89

    (33) term -> term EQUALS_EQUALS factor .

    TIMES           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    DIVIDE          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    MODULO          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    EQUALS_EQUALS   reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    NOT_EQUALS      reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    LESS_THAN       reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    GREATER_THAN    reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    LESS_EQUALS     reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    GREATER_EQUALS  reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    PLUS            reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    MINUS           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    AND             reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    OR              reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    ID              reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    IF              reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    WHILE           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    FOR             reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    FUNCTION        reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    RETURN          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    BREAK           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    CONTINUE        reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    LBRACE          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    INT             reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    FLOAT           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    STRING_TYPE     reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    BOOL            reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    VOID            reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    ARRAY           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    NUMBER          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    STRING          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    TRUE            reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    FALSE           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    LPAREN          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    NOT             reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    $end            reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    RPAREN          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    SEMICOLON       reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    RBRACE          reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    RBRACKET        reduce using rule 33 (term -> term EQUALS_EQUALS factor .)
    COMMA           reduce using rule 33 (term -> term EQUALS_EQUALS factor .)


state 90

    (34) term -> term NOT_EQUALS factor .

    TIMES           reduce using rule 34 (term -> term NOT_EQUALS factor .)
    DIVIDE          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    MODULO          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    EQUALS_EQUALS   reduce using rule 34 (term -> term NOT_EQUALS factor .)
    NOT_EQUALS      reduce using rule 34 (term -> term NOT_EQUALS factor .)
    LESS_THAN       reduce using rule 34 (term -> term NOT_EQUALS factor .)
    GREATER_THAN    reduce using rule 34 (term -> term NOT_EQUALS factor .)
    LESS_EQUALS     reduce using rule 34 (term -> term NOT_EQUALS factor .)
    GREATER_EQUALS  reduce using rule 34 (term -> term NOT_EQUALS factor .)
    PLUS            reduce using rule 34 (term -> term NOT_EQUALS factor .)
    MINUS           reduce using rule 34 (term -> term NOT_EQUALS factor .)
    AND             reduce using rule 34 (term -> term NOT_EQUALS factor .)
    OR              reduce using rule 34 (term -> term NOT_EQUALS factor .)
    ID              reduce using rule 34 (term -> term NOT_EQUALS factor .)
    IF              reduce using rule 34 (term -> term NOT_EQUALS factor .)
    WHILE           reduce using rule 34 (term -> term NOT_EQUALS factor .)
    FOR             reduce using rule 34 (term -> term NOT_EQUALS factor .)
    FUNCTION        reduce using rule 34 (term -> term NOT_EQUALS factor .)
    RETURN          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    BREAK           reduce using rule 34 (term -> term NOT_EQUALS factor .)
    CONTINUE        reduce using rule 34 (term -> term NOT_EQUALS factor .)
    LBRACE          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    INT             reduce using rule 34 (term -> term NOT_EQUALS factor .)
    FLOAT           reduce using rule 34 (term -> term NOT_EQUALS factor .)
    STRING_TYPE     reduce using rule 34 (term -> term NOT_EQUALS factor .)
    BOOL            reduce using rule 34 (term -> term NOT_EQUALS factor .)
    VOID            reduce using rule 34 (term -> term NOT_EQUALS factor .)
    ARRAY           reduce using rule 34 (term -> term NOT_EQUALS factor .)
    NUMBER          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    STRING          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    TRUE            reduce using rule 34 (term -> term NOT_EQUALS factor .)
    FALSE           reduce using rule 34 (term -> term NOT_EQUALS factor .)
    LPAREN          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    NOT             reduce using rule 34 (term -> term NOT_EQUALS factor .)
    $end            reduce using rule 34 (term -> term NOT_EQUALS factor .)
    RPAREN          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    SEMICOLON       reduce using rule 34 (term -> term NOT_EQUALS factor .)
    RBRACE          reduce using rule 34 (term -> term NOT_EQUALS factor .)
    RBRACKET        reduce using rule 34 (term -> term NOT_EQUALS factor .)
    COMMA           reduce using rule 34 (term -> term NOT_EQUALS factor .)


state 91

    (35) term -> term LESS_THAN factor .

    TIMES           reduce using rule 35 (term -> term LESS_THAN factor .)
    DIVIDE          reduce using rule 35 (term -> term LESS_THAN factor .)
    MODULO          reduce using rule 35 (term -> term LESS_THAN factor .)
    EQUALS_EQUALS   reduce using rule 35 (term -> term LESS_THAN factor .)
    NOT_EQUALS      reduce using rule 35 (term -> term LESS_THAN factor .)
    LESS_THAN       reduce using rule 35 (term -> term LESS_THAN factor .)
    GREATER_THAN    reduce using rule 35 (term -> term LESS_THAN factor .)
    LESS_EQUALS     reduce using rule 35 (term -> term LESS_THAN factor .)
    GREATER_EQUALS  reduce using rule 35 (term -> term LESS_THAN factor .)
    PLUS            reduce using rule 35 (term -> term LESS_THAN factor .)
    MINUS           reduce using rule 35 (term -> term LESS_THAN factor .)
    AND             reduce using rule 35 (term -> term LESS_THAN factor .)
    OR              reduce using rule 35 (term -> term LESS_THAN factor .)
    ID              reduce using rule 35 (term -> term LESS_THAN factor .)
    IF              reduce using rule 35 (term -> term LESS_THAN factor .)
    WHILE           reduce using rule 35 (term -> term LESS_THAN factor .)
    FOR             reduce using rule 35 (term -> term LESS_THAN factor .)
    FUNCTION        reduce using rule 35 (term -> term LESS_THAN factor .)
    RETURN          reduce using rule 35 (term -> term LESS_THAN factor .)
    BREAK           reduce using rule 35 (term -> term LESS_THAN factor .)
    CONTINUE        reduce using rule 35 (term -> term LESS_THAN factor .)
    LBRACE          reduce using rule 35 (term -> term LESS_THAN factor .)
    INT             reduce using rule 35 (term -> term LESS_THAN factor .)
    FLOAT           reduce using rule 35 (term -> term LESS_THAN factor .)
    STRING_TYPE     reduce using rule 35 (term -> term LESS_THAN factor .)
    BOOL            reduce using rule 35 (term -> term LESS_THAN factor .)
    VOID            reduce using rule 35 (term -> term LESS_THAN factor .)
    ARRAY           reduce using rule 35 (term -> term LESS_THAN factor .)
    NUMBER          reduce using rule 35 (term -> term LESS_THAN factor .)
    STRING          reduce using rule 35 (term -> term LESS_THAN factor .)
    TRUE            reduce using rule 35 (term -> term LESS_THAN factor .)
    FALSE           reduce using rule 35 (term -> term LESS_THAN factor .)
    LPAREN          reduce using rule 35 (term -> term LESS_THAN factor .)
    NOT             reduce using rule 35 (term -> term LESS_THAN factor .)
    $end            reduce using rule 35 (term -> term LESS_THAN factor .)
    RPAREN          reduce using rule 35 (term -> term LESS_THAN factor .)
    SEMICOLON       reduce using rule 35 (term -> term LESS_THAN factor .)
    RBRACE          reduce using rule 35 (term -> term LESS_THAN factor .)
    RBRACKET        reduce using rule 35 (term -> term LESS_THAN factor .)
    COMMA           reduce using rule 35 (term -> term LESS_THAN factor .)


state 92

    (36) term -> term GREATER_THAN factor .

    TIMES           reduce using rule 36 (term -> term GREATER_THAN factor .)
    DIVIDE          reduce using rule 36 (term -> term GREATER_THAN factor .)
    MODULO          reduce using rule 36 (term -> term GREATER_THAN factor .)
    EQUALS_EQUALS   reduce using rule 36 (term -> term GREATER_THAN factor .)
    NOT_EQUALS      reduce using rule 36 (term -> term GREATER_THAN factor .)
    LESS_THAN       reduce using rule 36 (term -> term GREATER_THAN factor .)
    GREATER_THAN    reduce using rule 36 (term -> term GREATER_THAN factor .)
    LESS_EQUALS     reduce using rule 36 (term -> term GREATER_THAN factor .)
    GREATER_EQUALS  reduce using rule 36 (term -> term GREATER_THAN factor .)
    PLUS            reduce using rule 36 (term -> term GREATER_THAN factor .)
    MINUS           reduce using rule 36 (term -> term GREATER_THAN factor .)
    AND             reduce using rule 36 (term -> term GREATER_THAN factor .)
    OR              reduce using rule 36 (term -> term GREATER_THAN factor .)
    ID              reduce using rule 36 (term -> term GREATER_THAN factor .)
    IF              reduce using rule 36 (term -> term GREATER_THAN factor .)
    WHILE           reduce using rule 36 (term -> term GREATER_THAN factor .)
    FOR             reduce using rule 36 (term -> term GREATER_THAN factor .)
    FUNCTION        reduce using rule 36 (term -> term GREATER_THAN factor .)
    RETURN          reduce using rule 36 (term -> term GREATER_THAN factor .)
    BREAK           reduce using rule 36 (term -> term GREATER_THAN factor .)
    CONTINUE        reduce using rule 36 (term -> term GREATER_THAN factor .)
    LBRACE          reduce using rule 36 (term -> term GREATER_THAN factor .)
    INT             reduce using rule 36 (term -> term GREATER_THAN factor .)
    FLOAT           reduce using rule 36 (term -> term GREATER_THAN factor .)
    STRING_TYPE     reduce using rule 36 (term -> term GREATER_THAN factor .)
    BOOL            reduce using rule 36 (term -> term GREATER_THAN factor .)
    VOID            reduce using rule 36 (term -> term GREATER_THAN factor .)
    ARRAY           reduce using rule 36 (term -> term GREATER_THAN factor .)
    NUMBER          reduce using rule 36 (term -> term GREATER_THAN factor .)
    STRING          reduce using rule 36 (term -> term GREATER_THAN factor .)
    TRUE            reduce using rule 36 (term -> term GREATER_THAN factor .)
    FALSE           reduce using rule 36 (term -> term GREATER_THAN factor .)
    LPAREN          reduce using rule 36 (term -> term GREATER_THAN factor .)
    NOT             reduce using rule 36 (term -> term GREATER_THAN factor .)
    $end            reduce using rule 36 (term -> term GREATER_THAN factor .)
    RPAREN          reduce using rule 36 (term -> term GREATER_THAN factor .)
    SEMICOLON       reduce using rule 36 (term -> term GREATER_THAN factor .)
    RBRACE          reduce using rule 36 (term -> term GREATER_THAN factor .)
    RBRACKET        reduce using rule 36 (term -> term GREATER_THAN factor .)
    COMMA           reduce using rule 36 (term -> term GREATER_THAN factor .)


state 93

    (37) term -> term LESS_EQUALS factor .

    TIMES           reduce using rule 37 (term -> term LESS_EQUALS factor .)
    DIVIDE          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    MODULO          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    EQUALS_EQUALS   reduce using rule 37 (term -> term LESS_EQUALS factor .)
    NOT_EQUALS      reduce using rule 37 (term -> term LESS_EQUALS factor .)
    LESS_THAN       reduce using rule 37 (term -> term LESS_EQUALS factor .)
    GREATER_THAN    reduce using rule 37 (term -> term LESS_EQUALS factor .)
    LESS_EQUALS     reduce using rule 37 (term -> term LESS_EQUALS factor .)
    GREATER_EQUALS  reduce using rule 37 (term -> term LESS_EQUALS factor .)
    PLUS            reduce using rule 37 (term -> term LESS_EQUALS factor .)
    MINUS           reduce using rule 37 (term -> term LESS_EQUALS factor .)
    AND             reduce using rule 37 (term -> term LESS_EQUALS factor .)
    OR              reduce using rule 37 (term -> term LESS_EQUALS factor .)
    ID              reduce using rule 37 (term -> term LESS_EQUALS factor .)
    IF              reduce using rule 37 (term -> term LESS_EQUALS factor .)
    WHILE           reduce using rule 37 (term -> term LESS_EQUALS factor .)
    FOR             reduce using rule 37 (term -> term LESS_EQUALS factor .)
    FUNCTION        reduce using rule 37 (term -> term LESS_EQUALS factor .)
    RETURN          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    BREAK           reduce using rule 37 (term -> term LESS_EQUALS factor .)
    CONTINUE        reduce using rule 37 (term -> term LESS_EQUALS factor .)
    LBRACE          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    INT             reduce using rule 37 (term -> term LESS_EQUALS factor .)
    FLOAT           reduce using rule 37 (term -> term LESS_EQUALS factor .)
    STRING_TYPE     reduce using rule 37 (term -> term LESS_EQUALS factor .)
    BOOL            reduce using rule 37 (term -> term LESS_EQUALS factor .)
    VOID            reduce using rule 37 (term -> term LESS_EQUALS factor .)
    ARRAY           reduce using rule 37 (term -> term LESS_EQUALS factor .)
    NUMBER          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    STRING          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    TRUE            reduce using rule 37 (term -> term LESS_EQUALS factor .)
    FALSE           reduce using rule 37 (term -> term LESS_EQUALS factor .)
    LPAREN          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    NOT             reduce using rule 37 (term -> term LESS_EQUALS factor .)
    $end            reduce using rule 37 (term -> term LESS_EQUALS factor .)
    RPAREN          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    SEMICOLON       reduce using rule 37 (term -> term LESS_EQUALS factor .)
    RBRACE          reduce using rule 37 (term -> term LESS_EQUALS factor .)
    RBRACKET        reduce using rule 37 (term -> term LESS_EQUALS factor .)
    COMMA           reduce using rule 37 (term -> term LESS_EQUALS factor .)


state 94

    (38) term -> term GREATER_EQUALS factor .

    TIMES           reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    DIVIDE          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    MODULO          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    EQUALS_EQUALS   reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    NOT_EQUALS      reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    LESS_THAN       reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    GREATER_THAN    reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    LESS_EQUALS     reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    GREATER_EQUALS  reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    PLUS            reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    MINUS           reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    AND             reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    OR              reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    ID              reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    IF              reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    WHILE           reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    FOR             reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    FUNCTION        reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    RETURN          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    BREAK           reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    CONTINUE        reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    LBRACE          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    INT             reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    FLOAT           reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    STRING_TYPE     reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    BOOL            reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    VOID            reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    ARRAY           reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    NUMBER          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    STRING          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    TRUE            reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    FALSE           reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    LPAREN          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    NOT             reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    $end            reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    RPAREN          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    SEMICOLON       reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    RBRACE          reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    RBRACKET        reduce using rule 38 (term -> term GREATER_EQUALS factor .)
    COMMA           reduce using rule 38 (term -> term GREATER_EQUALS factor .)


state 95

    (56) if_statement -> IF LPAREN expression . RPAREN block
    (57) if_statement -> IF LPAREN expression . RPAREN block ELSE block
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 96

    (44) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    EQUALS_EQUALS   reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    LESS_EQUALS     reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    GREATER_EQUALS  reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    STRING_TYPE     reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    VOID            reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    ARRAY           reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 44 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 44 (factor -> LPAREN expression RPAREN .)


state 97

    (45) factor -> ID LBRACKET . expression RBRACKET
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 111
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 98

    (58) while_statement -> WHILE LPAREN expression . RPAREN block
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 99

    (59) for_statement -> FOR LPAREN declaration . expression SEMICOLON expression RPAREN block
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 113
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 100

    (48) function_declaration -> FUNCTION type ID . LPAREN parameter_list RPAREN block

    LPAREN          shift and go to state 114


state 101

    (60) return_statement -> RETURN expression SEMICOLON .

    ID              reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    FUNCTION        reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    CONTINUE        reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    STRING_TYPE     reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    ARRAY           reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 60 (return_statement -> RETURN expression SEMICOLON .)


state 102

    (14) block -> LBRACE statement_list RBRACE .

    ID              reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    STRING_TYPE     reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    ARRAY           reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    NOT             reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 14 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 14 (block -> LBRACE statement_list RBRACE .)


state 103

    (16) statement_list -> statement_list statement .

    RBRACE          reduce using rule 16 (statement_list -> statement_list statement .)
    ID              reduce using rule 16 (statement_list -> statement_list statement .)
    IF              reduce using rule 16 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 16 (statement_list -> statement_list statement .)
    FOR             reduce using rule 16 (statement_list -> statement_list statement .)
    FUNCTION        reduce using rule 16 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 16 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 16 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 16 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 16 (statement_list -> statement_list statement .)
    INT             reduce using rule 16 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 16 (statement_list -> statement_list statement .)
    STRING_TYPE     reduce using rule 16 (statement_list -> statement_list statement .)
    BOOL            reduce using rule 16 (statement_list -> statement_list statement .)
    VOID            reduce using rule 16 (statement_list -> statement_list statement .)
    ARRAY           reduce using rule 16 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 16 (statement_list -> statement_list statement .)
    STRING          reduce using rule 16 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 16 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 16 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 16 (statement_list -> statement_list statement .)
    NOT             reduce using rule 16 (statement_list -> statement_list statement .)


state 104

    (17) declaration -> type ID EQUALS expression . SEMICOLON
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    SEMICOLON       shift and go to state 115
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 105

    (18) declaration -> type ID LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 116


state 106

    (20) assignment -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    FUNCTION        reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    BREAK           reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    CONTINUE        reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    STRING_TYPE     reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    BOOL            reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    VOID            reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    ARRAY           reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    NOT             reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 20 (assignment -> ID EQUALS expression SEMICOLON .)


state 107

    (21) assignment -> ID LBRACKET expression RBRACKET . EQUALS expression SEMICOLON
    (45) factor -> ID LBRACKET expression RBRACKET .

    EQUALS          shift and go to state 117
    TIMES           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    MODULO          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    EQUALS_EQUALS   reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    NOT_EQUALS      reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LESS_EQUALS     reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    GREATER_EQUALS  reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    ID              reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    IF              reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FOR             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FUNCTION        reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    BREAK           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    CONTINUE        reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    INT             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    STRING_TYPE     reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    BOOL            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    VOID            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    ARRAY           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    STRING          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    NOT             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    $end            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)


state 108

    (52) function_call -> ID LPAREN argument_list RPAREN .

    TIMES           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    MODULO          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    EQUALS_EQUALS   reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    NOT_EQUALS      reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    LESS_THAN       reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    GREATER_THAN    reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    LESS_EQUALS     reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    GREATER_EQUALS  reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    IF              reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    FOR             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    FUNCTION        reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    RETURN          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    BREAK           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    CONTINUE        reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    LBRACE          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    INT             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    STRING_TYPE     reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    BOOL            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    VOID            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    ARRAY           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    NUMBER          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    STRING          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    TRUE            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    FALSE           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    NOT             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    $end            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    SEMICOLON       reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)


state 109

    (54) argument_list -> argument_list COMMA . expression
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 118
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 110

    (56) if_statement -> IF LPAREN expression RPAREN . block
    (57) if_statement -> IF LPAREN expression RPAREN . block ELSE block
    (14) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 119

state 111

    (45) factor -> ID LBRACKET expression . RBRACKET
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RBRACKET        shift and go to state 120
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 112

    (58) while_statement -> WHILE LPAREN expression RPAREN . block
    (14) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 121

state 113

    (59) for_statement -> FOR LPAREN declaration expression . SEMICOLON expression RPAREN block
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    SEMICOLON       shift and go to state 122
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 114

    (48) function_declaration -> FUNCTION type ID LPAREN . parameter_list RPAREN block
    (49) parameter_list -> . type ID
    (50) parameter_list -> . parameter_list COMMA type ID
    (51) parameter_list -> . empty
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY
    (70) empty -> .

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32
    RPAREN          reduce using rule 70 (empty -> .)
    COMMA           reduce using rule 70 (empty -> .)

    type                           shift and go to state 123
    parameter_list                 shift and go to state 124
    empty                          shift and go to state 125

state 115

    (17) declaration -> type ID EQUALS expression SEMICOLON .

    ID              reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    FUNCTION        reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    BREAK           reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    CONTINUE        reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    STRING_TYPE     reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    BOOL            reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    VOID            reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    ARRAY           reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    NOT             reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 17 (declaration -> type ID EQUALS expression SEMICOLON .)


state 116

    (18) declaration -> type ID LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 126


state 117

    (21) assignment -> ID LBRACKET expression RBRACKET EQUALS . expression SEMICOLON
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 127
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 118

    (54) argument_list -> argument_list COMMA expression .
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RPAREN          reduce using rule 54 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 54 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 119

    (56) if_statement -> IF LPAREN expression RPAREN block .
    (57) if_statement -> IF LPAREN expression RPAREN block . ELSE block

    ID              reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    FUNCTION        reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    BREAK           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    CONTINUE        reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    LBRACE          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    INT             reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    FLOAT           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    STRING_TYPE     reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    BOOL            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    VOID            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    ARRAY           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    STRING          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    TRUE            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    FALSE           reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    NOT             reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 56 (if_statement -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 128


state 120

    (45) factor -> ID LBRACKET expression RBRACKET .

    TIMES           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    MODULO          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    EQUALS_EQUALS   reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    NOT_EQUALS      reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LESS_EQUALS     reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    GREATER_EQUALS  reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    ID              reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    IF              reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FOR             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FUNCTION        reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    BREAK           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    CONTINUE        reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    INT             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    STRING_TYPE     reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    BOOL            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    VOID            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    ARRAY           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    STRING          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    TRUE            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    FALSE           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    NOT             reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    $end            reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 45 (factor -> ID LBRACKET expression RBRACKET .)


state 121

    (58) while_statement -> WHILE LPAREN expression RPAREN block .

    ID              reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FUNCTION        reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    BREAK           reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    CONTINUE        reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    LBRACE          reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    INT             reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FLOAT           reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    STRING_TYPE     reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    BOOL            reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    VOID            reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    ARRAY           reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    STRING          reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    TRUE            reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FALSE           reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    NOT             reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 58 (while_statement -> WHILE LPAREN expression RPAREN block .)


state 122

    (59) for_statement -> FOR LPAREN declaration expression SEMICOLON . expression RPAREN block
    (24) expression -> . term
    (25) expression -> . expression PLUS term
    (26) expression -> . expression MINUS term
    (27) expression -> . expression AND term
    (28) expression -> . expression OR term
    (29) term -> . factor
    (30) term -> . term TIMES factor
    (31) term -> . term DIVIDE factor
    (32) term -> . term MODULO factor
    (33) term -> . term EQUALS_EQUALS factor
    (34) term -> . term NOT_EQUALS factor
    (35) term -> . term LESS_THAN factor
    (36) term -> . term GREATER_THAN factor
    (37) term -> . term LESS_EQUALS factor
    (38) term -> . term GREATER_EQUALS factor
    (39) factor -> . NUMBER
    (40) factor -> . STRING
    (41) factor -> . ID
    (42) factor -> . TRUE
    (43) factor -> . FALSE
    (44) factor -> . LPAREN expression RPAREN
    (45) factor -> . ID LBRACKET expression RBRACKET
    (46) factor -> . function_call
    (47) factor -> . NOT factor
    (52) function_call -> . ID LPAREN argument_list RPAREN

    NUMBER          shift and go to state 16
    STRING          shift and go to state 34
    ID              shift and go to state 61
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    LPAREN          shift and go to state 19
    NOT             shift and go to state 38

    expression                     shift and go to state 129
    term                           shift and go to state 17
    factor                         shift and go to state 33
    function_call                  shift and go to state 37

state 123

    (49) parameter_list -> type . ID

    ID              shift and go to state 130


state 124

    (48) function_declaration -> FUNCTION type ID LPAREN parameter_list . RPAREN block
    (50) parameter_list -> parameter_list . COMMA type ID

    RPAREN          shift and go to state 131
    COMMA           shift and go to state 132


state 125

    (51) parameter_list -> empty .

    RPAREN          reduce using rule 51 (parameter_list -> empty .)
    COMMA           reduce using rule 51 (parameter_list -> empty .)


state 126

    (18) declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .

    ID              reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    IF              reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    WHILE           reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    FOR             reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURN          reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    BREAK           reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    CONTINUE        reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    INT             reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    STRING_TYPE     reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    BOOL            reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    VOID            reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    ARRAY           reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    NUMBER          reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    STRING          reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    TRUE            reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    FALSE           reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    NOT             reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    $end            reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 18 (declaration -> type ID LBRACKET NUMBER RBRACKET SEMICOLON .)


state 127

    (21) assignment -> ID LBRACKET expression RBRACKET EQUALS expression . SEMICOLON
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    SEMICOLON       shift and go to state 133
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 128

    (57) if_statement -> IF LPAREN expression RPAREN block ELSE . block
    (14) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 134

state 129

    (59) for_statement -> FOR LPAREN declaration expression SEMICOLON expression . RPAREN block
    (25) expression -> expression . PLUS term
    (26) expression -> expression . MINUS term
    (27) expression -> expression . AND term
    (28) expression -> expression . OR term

    RPAREN          shift and go to state 135
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    AND             shift and go to state 42
    OR              shift and go to state 43


state 130

    (49) parameter_list -> type ID .

    RPAREN          reduce using rule 49 (parameter_list -> type ID .)
    COMMA           reduce using rule 49 (parameter_list -> type ID .)


state 131

    (48) function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN . block
    (14) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 136

state 132

    (50) parameter_list -> parameter_list COMMA . type ID
    (64) type -> . INT
    (65) type -> . FLOAT
    (66) type -> . STRING_TYPE
    (67) type -> . BOOL
    (68) type -> . VOID
    (69) type -> . ARRAY

    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING_TYPE     shift and go to state 29
    BOOL            shift and go to state 30
    VOID            shift and go to state 31
    ARRAY           shift and go to state 32

    type                           shift and go to state 137

state 133

    (21) assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .

    ID              reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    IF              reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    FOR             reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    FUNCTION        reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    BREAK           reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    CONTINUE        reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    INT             reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    STRING_TYPE     reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    BOOL            reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    VOID            reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    ARRAY           reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    STRING          reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    NOT             reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    $end            reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 21 (assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)


state 134

    (57) if_statement -> IF LPAREN expression RPAREN block ELSE block .

    ID              reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FUNCTION        reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    BREAK           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    CONTINUE        reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    LBRACE          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    INT             reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FLOAT           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    STRING_TYPE     reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    BOOL            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    VOID            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    ARRAY           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    STRING          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    TRUE            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FALSE           reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    NOT             reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 57 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)


state 135

    (59) for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN . block
    (14) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 138

state 136

    (48) function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .

    ID              reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    IF              reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    WHILE           reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    FOR             reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    FUNCTION        reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    RETURN          reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    BREAK           reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    CONTINUE        reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    LBRACE          reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    INT             reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    FLOAT           reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    STRING_TYPE     reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    BOOL            reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    VOID            reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    ARRAY           reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    NUMBER          reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    STRING          reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    TRUE            reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    FALSE           reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    LPAREN          reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    NOT             reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    $end            reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)
    RBRACE          reduce using rule 48 (function_declaration -> FUNCTION type ID LPAREN parameter_list RPAREN block .)


state 137

    (50) parameter_list -> parameter_list COMMA type . ID

    ID              shift and go to state 139


state 138

    (59) for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .

    ID              reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    IF              reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    WHILE           reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    FOR             reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    FUNCTION        reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    RETURN          reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    BREAK           reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    CONTINUE        reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    LBRACE          reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    INT             reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    FLOAT           reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    STRING_TYPE     reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    BOOL            reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    VOID            reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    ARRAY           reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    NUMBER          reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    STRING          reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    TRUE            reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    FALSE           reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    LPAREN          reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    NOT             reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    $end            reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)
    RBRACE          reduce using rule 59 (for_statement -> FOR LPAREN declaration expression SEMICOLON expression RPAREN block .)


state 139

    (50) parameter_list -> parameter_list COMMA type ID .

    RPAREN          reduce using rule 50 (parameter_list -> parameter_list COMMA type ID .)
    COMMA           reduce using rule 50 (parameter_list -> parameter_list COMMA type ID .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 61 resolved as shift
